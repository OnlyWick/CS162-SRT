1
00:00:04,200 --> 00:00:05,540
Okay, awesome question.
好的，很棒的问题。

2
00:00:06,360 --> 00:00:09,100
Thanks for the pointing this out.
感谢你指出这个问题。

3
00:00:10,380 --> 00:00:11,670
Sorry about that, everyone.
对不起，大家。

4
00:00:18,460 --> 00:00:19,300
We have.
我们有。

5
00:00:20,500 --> 00:00:22,740
Now, what are the rules for this year?
现在，今年的规则是什么？

6
00:00:26,100 --> 00:00:27,530
Still, mostly,
仍然，大多数情况下，

7
00:00:27,540 --> 00:00:29,010
this class will be remote.
这门课将以远程方式进行。

8
00:00:30,720 --> 00:00:32,160
All lecture will be remote.
所有讲座将以远程方式进行。

9
00:00:34,150 --> 00:00:36,140
This is where the department decided,
这是部门决定的地方。

10
00:00:36,150 --> 00:00:37,420
actually early on,
实际上，在早期，

11
00:00:37,430 --> 00:00:39,420
even before delta variant,
即使在 Delta 变种出现之前，

12
00:00:41,680 --> 00:00:43,920
all exams will be remote,
所有考试将以远程方式进行。

13
00:00:45,260 --> 00:00:46,740
will have three midterms.
将会有三次期中考试。

14
00:00:47,500 --> 00:00:48,780
There is no final.
没有期末考试。

15
00:00:50,410 --> 00:00:55,560
We have 17 discussion sections on thursday and fridays for on thursday,
我们在周四和周五有17个讨论小组，其中周四有...

16
00:00:55,570 --> 00:00:57,040
13 on friday.
星期五的13号。

17
00:00:58,350 --> 00:01:01,680
Out of those four will be in person.
其中四个将是面对面的。

18
00:01:01,690 --> 00:01:03,710
There will be on friday,
星期五会有

19
00:01:04,070 --> 00:01:05,410
and 30 will be remote.
其中30人将远程参与。

20
00:01:07,350 --> 00:01:11,400
Now, please make sure because of that you have a working camera,
现在，请确保您有一台正常工作的摄像头，

21
00:01:12,470 --> 00:01:17,700
because you are going to have zoom procuring of exams and require
因为你们将要进行远程考试，并且需要购买Zoom。

22
00:01:17,710 --> 00:01:20,060
a section design reviews,
一节的设计审查

23
00:01:21,980 --> 00:01:25,690
working with your colleagues for the group projects,
与你的同事一起合作完成团队项目，

24
00:01:26,590 --> 00:01:31,770
all requires to see each other and also screen shots.
所有人都需要互相看到，并且还需要屏幕截图。

25
00:01:37,340 --> 00:01:38,850
Goals of today lectures.
今天讲座的目标。

26
00:01:38,860 --> 00:01:41,330
It's an introductory lecture, obviously,
这是一堂入门课程的讲座，显然地，

27
00:01:41,850 --> 00:01:45,350
is to try to figure out a little bit what is an operating system.
是尝试弄清楚操作系统是什么的一点点内容。

28
00:01:45,360 --> 00:01:48,290
And in particular, also, what is not.
特别是，还有什么不是。

29
00:01:49,310 --> 00:01:49,670
And also,
而且，

30
00:01:49,680 --> 00:01:54,940
i'm going to say a few words about what makes operating systems so exciting.
我将简要介绍一下什么使操作系统如此令人兴奋。

31
00:01:56,180 --> 00:02:01,930
It's a while and is actually probably one of the excite most exciting times
这是一个相当长的时间，实际上可能是最令人兴奋的时刻之一。

32
00:02:03,930 --> 00:02:06,580
to study and work on operating systems.
学习和工作于操作系统。

33
00:02:08,190 --> 00:02:11,230
And then we are going to talk a little bit more at the end about how does
然后我们在最后会再多谈一点关于如何

34
00:02:11,240 --> 00:02:12,150
the class operate.
这个班级运作。

35
00:02:14,210 --> 00:02:14,850
Please,
请

36
00:02:15,660 --> 00:02:17,210
interactivity is important.
互动性很重要。

37
00:02:17,220 --> 00:02:19,090
Now I know that it's harder,
现在我知道这更难了，

38
00:02:19,670 --> 00:02:25,190
especially with a weapon are i'm going to stop from time to time
特别是携带武器时，我会不时停下来。

39
00:02:25,830 --> 00:02:27,580
and look and take questions.
并查看并回答问题。

40
00:02:30,350 --> 00:02:32,660
Please ask questions and notes,
请提出问题和注意事项。

41
00:02:32,670 --> 00:02:34,380
because even while I am talking,
因为即使我在说话的同时，

42
00:02:34,770 --> 00:02:39,020
other people could answer them some of our t as
其他人可以回答他们一些我们的问题

43
00:02:43,930 --> 00:02:46,480
what is fundamentally an operating system.
操作系统从根本上讲是什么？

44
00:02:48,860 --> 00:02:53,690
One way to think about the operating system is that software layer,
一个思考操作系统的方式是将其视为软件层，

45
00:02:54,560 --> 00:03:02,110
which runs on top of hardware of the hardware and provide support to the application.
操作系统运行在硬件之上，并为应用程序提供支持。

46
00:03:03,300 --> 00:03:03,500
Right?
对吗？

47
00:03:03,510 --> 00:03:05,820
Why does it mean providing support to applications?
为什么它意味着为应用程序提供支持？

48
00:03:06,960 --> 00:03:13,350
Means that it makes it easier to develop applications on and take advantage
这意味着它使得在上面开发应用程序更加容易，并能充分利用其优势。

49
00:03:13,360 --> 00:03:15,110
of the hardware capabilities.
硬件能力的一部分。

50
00:03:16,860 --> 00:03:19,730
It also protects application from each others.
它还保护应用程序之间的相互影响。

51
00:03:21,250 --> 00:03:24,160
It provides security and authentication,
它提供安全性和身份验证功能，

52
00:03:24,170 --> 00:03:33,120
so only the applications which should a use a hardware and have access
只有需要使用硬件并具有访问权限的应用程序才能使用。

53
00:03:33,130 --> 00:03:34,000
to the data,
对于数据，

54
00:03:35,050 --> 00:03:38,320
and also provide support for cooperation.
并且提供合作支持。

55
00:03:38,330 --> 00:03:41,000
There are applications which cooperate with each other.
有一些应用程序彼此合作。

56
00:03:41,520 --> 00:03:43,830
Obviously, this is more and more expected today.
显然，这在今天越来越受到期望。

57
00:03:43,840 --> 00:03:46,150
We are in the age of the internet.
我们正处于互联网时代。

58
00:03:48,960 --> 00:03:49,430
Right?
对吗？

59
00:03:50,270 --> 00:03:53,760
Why do we care to provide support for applications?
为什么我们关心为应用程序提供支持呢？

60
00:03:54,120 --> 00:03:56,290
Because most of the things you do online,
因为你在网上做的大部分事情，

61
00:03:56,300 --> 00:03:57,610
you do through applications.
你可以通过应用程序来实现。

62
00:03:58,090 --> 00:03:59,970
That's it, right?
就是这样了，对吗？

63
00:04:00,660 --> 00:04:06,460
It's the most a is a way people interact with computers is that people
这是人们与计算机互动的最常见方式之一

64
00:04:06,470 --> 00:04:08,540
are going to interact with the virtual world.
将要与虚拟世界进行交互。

65
00:04:08,550 --> 00:04:10,260
So you have physical world, virtual world,
所以你有物理世界和虚拟世界。

66
00:04:10,690 --> 00:04:12,490
ritual or means application.
仪式或手段应用。

67
00:04:13,700 --> 00:04:15,670
And also to drive home,
而且为了强调，

68
00:04:15,680 --> 00:04:24,160
the.here are some numbers about how is a global mobile market size.
这里有一些关于全球移动市场规模的数字。

69
00:04:24,810 --> 00:04:27,380
You can see it is huge.
你可以看到它非常巨大。

70
00:04:27,850 --> 00:04:28,860
And actually,
实际上，

71
00:04:28,870 --> 00:04:30,300
even year over year,
即使是年复一年，

72
00:04:30,310 --> 00:04:35,570
the growth is significant about 20% or more.
增长幅度显著，约为20%或更高。

73
00:04:36,340 --> 00:04:36,720
Right?
对吗？

74
00:04:40,560 --> 00:04:42,870
It's, again, an application provides the abstraction,
这是一个再次提供抽象的应用程序。

75
00:04:42,880 --> 00:04:45,110
manages the resources,
管理资源

76
00:04:45,120 --> 00:04:46,470
harder resources.
更加困难的资源。

77
00:04:47,940 --> 00:04:53,720
It's achieving that through using a bunch of algorithms for scheduling
它通过使用一系列调度算法来实现这一点。

78
00:04:53,730 --> 00:04:55,520
application or processes.
应用程序或进程。

79
00:04:57,590 --> 00:05:01,470
Providing access to resources from different concurrent applications
为不同并发应用程序提供资源访问

80
00:05:01,480 --> 00:05:04,070
running at the same time
同时运行

81
00:05:06,080 --> 00:05:08,100
and security and many more.
以及安全等等。

82
00:05:18,580 --> 00:05:19,850
Right now,
现在，

83
00:05:19,860 --> 00:05:22,210
let's look again a little bit.
让我们再仔细看一下。

84
00:05:23,040 --> 00:05:24,230
There is a question here.
这里有一个问题。

85
00:05:24,240 --> 00:05:27,590
What is now what is now an exciting,
现在是什么，现在是令人兴奋的。

86
00:05:27,600 --> 00:05:30,690
why is now an exciting time for starting working hours?
为什么现在是开始工作的好时机？

87
00:05:31,780 --> 00:05:34,410
We are going to answer that later,
我们稍后会回答这个问题。

88
00:05:35,140 --> 00:05:41,690
because the impact of the os and the challenges are bigger than ever.
因为操作系统的影响和挑战比以往任何时候都更大。

89
00:05:42,350 --> 00:05:43,930
That's a short answer.
这是一个简短的回答。

90
00:05:47,330 --> 00:05:50,600
Here, again, it's not a problem during this lecture.
在这里，再次强调，在本次讲座中没有问题。

91
00:05:50,610 --> 00:05:53,410
If you don't understand everything, this is pro.
如果你不理解一切，这是专业级别的。

92
00:05:54,700 --> 00:06:01,450
We are aim here to provide some kind of end to end feeling about what
我们的目标是在这里提供一种端到端的感觉，让大家对什么

93
00:06:01,460 --> 00:06:03,700
the operating system is doing.
操作系统正在做的事情。

94
00:06:04,370 --> 00:06:07,350
But the rest of the class you are going to dive in.
但是你将要深入学习课程的其他内容。

95
00:06:08,140 --> 00:06:11,370
We are going to look at all these aspects.
我们将会考虑所有这些方面。

96
00:06:11,380 --> 00:06:14,490
I'm going to touch during this lecture in more detail.
在本讲座中，我将详细介绍这个问题。

97
00:06:16,850 --> 00:06:18,920
Basically, again, it's an application.
基本上，再次强调，它是一个应用程序。

98
00:06:18,930 --> 00:06:21,800
You want to run an application, run a program.
你想运行一个应用程序，运行一个程序。

99
00:06:22,420 --> 00:06:25,870
You run to one, you have to run it on top of the harbor.
如果你追逐一个目标，你必须将其追到港口顶端。

100
00:06:25,880 --> 00:06:26,120
Now,
现在，

101
00:06:26,820 --> 00:06:28,970
what is a harder consisting from of?
"harder consisting from"这个短语在英文中并没有明确的意义。可能是由于拼写错误或语法错误导致的。请提供更多的上下文或修正错误，以便我能够帮助您更好地理解和翻译。

102
00:06:29,820 --> 00:06:34,510
You have a processor needs to execute the instructions to run your applications,
你有一个处理器需要执行指令来运行你的应用程序。

103
00:06:35,050 --> 00:06:36,480
and you clearly have a memory.
而且你显然有记忆力。

104
00:06:36,900 --> 00:06:37,280
Right?
对吗？

105
00:06:38,400 --> 00:06:40,680
We store the data and store the program.
我们存储数据和存储程序。

106
00:06:40,690 --> 00:06:42,120
You store the application code.
你存储应用程序代码。

107
00:06:44,210 --> 00:06:47,440
The processors read the instructions and read the data,
处理器读取指令并读取数据。

108
00:06:48,600 --> 00:06:54,410
and executes those instructions on the data.
并且在数据上执行这些指令。

109
00:06:54,690 --> 00:06:57,120
And this is how your application is running.
这是你的应用程序的运行方式。

110
00:07:00,030 --> 00:07:02,350
In addition to just memory, you have a cache,
除了内存之外，你还有一个缓存。

111
00:07:03,500 --> 00:07:11,140
keep the most recent data or the most access data around closer to the processor.
将最近的数据或最常访问的数据保持在离处理器更近的位置。

112
00:07:11,870 --> 00:07:14,420
This for, obviously, for improving the performance,
这个目的显然是为了提高性能。

113
00:07:14,930 --> 00:07:22,560
you have aa base table and tlb translation aside buffer this.
你有一个基本表和一个TLB（转换后备缓冲区）。

114
00:07:22,570 --> 00:07:27,350
Again, it's are the mechanisms for improving the performance.
再次强调，这些机制是用于提高性能的。

115
00:07:28,740 --> 00:07:29,630
Besides that,
除此之外，

116
00:07:29,640 --> 00:07:35,770
you have aa storage where you need to store the data as a program at rest.
你有一个存储空间，需要将数据以程序的形式存储在其中。

117
00:07:36,620 --> 00:07:40,090
The process and memory are storing the data and run the program
进程和内存负责存储数据并运行程序。

118
00:07:40,100 --> 00:07:41,650
only when they are powered on.
只有当它们通电时才能工作。

119
00:07:43,120 --> 00:07:46,050
Obviously, you have a lot of peripherals,
显然，你有很多外设设备。

120
00:07:46,730 --> 00:07:47,820
you have displays,
你有显示器。

121
00:07:48,480 --> 00:07:50,810
you have mouse,
你有鼠标。

122
00:07:50,820 --> 00:07:52,620
you have network,
你有网络。

123
00:07:52,630 --> 00:07:54,700
you are connected to the internet and many more.
你已连接到互联网，还有许多其他功能。

124
00:07:56,220 --> 00:07:57,510
So this is quite complex.
这很复杂。

125
00:07:58,010 --> 00:07:58,370
Right?
对吗？

126
00:07:59,160 --> 00:08:00,950
Now, the key here,
现在，关键在于

127
00:08:01,700 --> 00:08:02,950
and they are connected, right?
它们是连接在一起的，对吗？

128
00:08:02,960 --> 00:08:04,710
All of these species are connected.
所有这些物种都是相互连接的。

129
00:08:05,640 --> 00:08:12,710
The key here is basically how you are going to make easy and secure
关键在于你如何使其简单和安全。

130
00:08:13,040 --> 00:08:18,010
for the application to run on this hardware and also take advantage
为了使应用程序在这台硬件上运行并充分利用其优势

131
00:08:18,020 --> 00:08:19,370
of the hardware capabilities.
硬件能力的一部分。

132
00:08:23,490 --> 00:08:28,510
And many of these things you learn like there's a machine structure
而且你学到的很多东西就像是一种机器结构

133
00:08:28,970 --> 00:08:31,950
in cx 61 c it's,
在 CX 61 C 中，它是...

134
00:08:31,960 --> 00:08:32,310
again,
再次，

135
00:08:32,320 --> 00:08:37,890
one of the main functionality of the operating system is to abstract away
操作系统的主要功能之一是抽象化处理

136
00:08:37,900 --> 00:08:40,300
this hardware to the application.
将这个硬件连接到应用程序中。

137
00:08:49,280 --> 00:08:52,780
Let me, do I do this next set of few slides?
让我来，我接下来做这几张幻灯片好吗？

138
00:08:52,790 --> 00:08:54,380
And then i'll stop for questions.
然后我会停下来等问题。

139
00:08:55,990 --> 00:09:01,530
So one way to think about operating system is this like you lose honest.
操作系统的一种思考方式是，就像你失去了诚实一样。

140
00:09:02,060 --> 00:09:02,520
Right?
对吗？

141
00:09:03,410 --> 00:09:04,040
Why is that?
为什么这样做呢？

142
00:09:04,050 --> 00:09:04,720
Because again,
因为再次，

143
00:09:04,730 --> 00:09:08,680
it's provides this kind of abstraction of the physical resources.
它提供了对物理资源的这种抽象。

144
00:09:09,580 --> 00:09:13,870
The abstractions are much easier to use and the applications
这些抽象更容易使用，应用程序也更简单

145
00:09:14,150 --> 00:09:16,970
than the application using directly the harbor.
与直接使用港口的应用程序相比。

146
00:09:20,030 --> 00:09:24,380
One of the way it makes it easier to use the operating system makes
它使操作系统更易于使用的一种方式是

147
00:09:24,390 --> 00:09:28,000
easier for the application to use is removing limitations.
使应用程序更易于使用的方法是消除限制。

148
00:09:28,820 --> 00:09:29,250
Right?
对吗？

149
00:09:30,180 --> 00:09:35,210
For instance, it provides you the illusion to the eu being the application,
例如，它给你一种欧盟是应用程序的错觉。

150
00:09:35,530 --> 00:09:37,960
the illusion that you are the only one,
你是唯一的幻觉

151
00:09:37,970 --> 00:09:40,720
the application is the only one using that machine.
该应用程序是唯一使用该机器的应用程序。

152
00:09:42,310 --> 00:09:45,930
It provides the illusion that the memory is like infinite.
它提供了一种假象，让内存看起来像是无限的。

153
00:09:45,940 --> 00:09:48,740
There are no limits, right?
没有限制，对吗？

154
00:09:49,110 --> 00:09:51,620
It provides the illusion, you have files,
它提供了一种错觉，让你觉得有文件存在。

155
00:09:53,470 --> 00:09:54,900
and data stored in files.
以及存储在文件中的数据。

156
00:09:54,910 --> 00:09:56,820
You have users, you have messages.
你有用户，你有消息。

157
00:09:57,480 --> 00:09:57,840
So like,
所以，就像，

158
00:09:58,170 --> 00:10:02,000
it's a much higher level of abstraction than operating just on beats.
这是比仅仅操作节拍更高层次的抽象。

159
00:10:06,030 --> 00:10:12,470
And the main way the operating system provides abstracts.
操作系统提供抽象的主要方式是什么？

160
00:10:13,990 --> 00:10:16,800
This resources,
这些资源，

161
00:10:16,810 --> 00:10:20,720
harder resources to the application is through the process.
将更多的资源分配给应用程序的方法是通过进程。

162
00:10:21,620 --> 00:10:27,540
The process is execution environment in which the applications run.
进程是应用程序运行的执行环境。

163
00:10:29,790 --> 00:10:33,540
And the process consists of threads.
进程由线程组成。

164
00:10:34,870 --> 00:10:37,300
This is basically the concept,
这基本上是概念。

165
00:10:37,310 --> 00:10:38,700
the unit of execution.
执行单元。

166
00:10:40,370 --> 00:10:41,590
It's our address space.
这是我们的地址空间。

167
00:10:42,770 --> 00:10:45,730
This is a unit kind of allocates allocation, right?
这是一种单元分配的分配方式，对吗？

168
00:10:45,740 --> 00:10:46,450
Allocate resources.
分配资源。

169
00:10:47,520 --> 00:10:51,130
And you allocate addresses memory,
你分配内存地址，

170
00:10:51,790 --> 00:10:57,020
and you have access to files and sockets to communicate over network.
你可以访问文件和套接字以进行网络通信。

171
00:10:59,490 --> 00:11:05,650
The process encapsulate and provides all this abstraction to the application.
该进程封装并向应用程序提供所有这些抽象。

172
00:11:06,010 --> 00:11:10,120
The application only need to understand about how to operate on threads,
该应用程序只需要了解如何操作线程即可。

173
00:11:10,390 --> 00:11:12,270
another space, how to rewrite files,
另一个空间，如何重写文件？

174
00:11:12,280 --> 00:11:13,970
how to communicate our sockets,
如何进行套接字通信

175
00:11:13,980 --> 00:11:15,670
so to communicate our network.
所以要进行网络通信。

176
00:11:17,790 --> 00:11:20,050
So that's it much easier.
所以这样就容易多了。

177
00:11:21,620 --> 00:11:23,450
How does application take advantage?
应用程序如何利用？

178
00:11:23,460 --> 00:11:26,370
You write the code and you compile the code.
你编写代码并编译代码。

179
00:11:27,350 --> 00:11:29,620
Your code is not only the code you are writing,
你的代码不仅仅是你正在编写的代码，

180
00:11:29,630 --> 00:11:33,660
but it's are going to use also libraries and a bunch of system libraries,
但它还将使用一些库和大量的系统库，

181
00:11:34,190 --> 00:11:36,430
which are coming with any operating system.
这些都是随操作系统提供的。

182
00:11:39,070 --> 00:11:40,340
Again, to summarize,
再次总结一下，

183
00:11:40,350 --> 00:11:45,620
the application view of machine is that of the process.
机器的应用视图是进程的视图。

184
00:11:47,040 --> 00:11:50,310
Each application program runs in its own process.
每个应用程序在自己的进程中运行。

185
00:11:50,950 --> 00:11:53,670
This process provides this much, higher level,
这个过程提供了更高级别的功能。

186
00:11:53,680 --> 00:11:56,920
much nicer interfaces, then they are harder.
更漂亮的界面通常意味着更难使用。

187
00:11:59,070 --> 00:11:59,540
Okay?
好的？

188
00:12:03,410 --> 00:12:04,750
It's again here you can see.
你可以再次看到它。

189
00:12:04,760 --> 00:12:05,990
It's like I mentioned,
就像我之前提到的那样，

190
00:12:06,000 --> 00:12:07,470
you have the program,
你有这个程序。

191
00:12:07,480 --> 00:12:08,590
the code you write,
你写的代码

192
00:12:09,190 --> 00:12:12,980
which is going to use some calls to the system libraries,
这将使用一些系统库的调用。

193
00:12:13,610 --> 00:12:17,640
which are going basically to implement this api for this abstraction
将基本实现此抽象的API是哪些？

194
00:12:17,650 --> 00:12:20,920
of our api its application programming interfaces,
我们的API是应用程序编程接口。

195
00:12:22,270 --> 00:12:23,150
to manipulate these abstractions.
操作这些抽象。

196
00:12:23,160 --> 00:12:26,050
And then you take care of this, you compile it,
然后你负责这个，你编译它，

197
00:12:26,060 --> 00:12:29,830
you get the executable code and that you run it on your machine.
你得到了可执行代码，并在你的机器上运行它。

198
00:12:32,490 --> 00:12:33,840
Let me stop here.
让我停在这里。

199
00:12:33,850 --> 00:12:35,870
And let's see,
让我们看看，

200
00:12:35,880 --> 00:12:37,110
there is a question.
有一个问题。

201
00:12:38,710 --> 00:12:41,070
What else do you like the best?
你还喜欢什么其他的东西？

202
00:12:43,620 --> 00:12:45,850
I think that's a good question.
我认为这是一个很好的问题。

203
00:12:47,000 --> 00:12:47,740
I think, look,
我认为，看，

204
00:12:48,430 --> 00:12:49,440
it's like you.
就像你一样。

205
00:12:49,790 --> 00:12:52,680
I'm not going to surprise you here.
我不会在这里给你带来惊喜。

206
00:12:53,220 --> 00:12:56,040
I think there are two systems which are quite good.
我认为有两个系统非常好。

207
00:12:56,050 --> 00:12:57,900
It's and i'm using them.
我正在使用它们。

208
00:12:57,910 --> 00:13:00,840
It's linux and macros.
这是关于Linux和宏的内容。

209
00:13:03,850 --> 00:13:04,400
Mac west.
Mac西部。

210
00:13:04,410 --> 00:13:05,760
We are going to talk about that.
我们将要讨论这个问题。

211
00:13:05,770 --> 00:13:13,060
It's actually build also of the unique bsd which originated from berkeley.
它实际上也是由源自伯克利的独特的BSD构建的。

212
00:13:14,750 --> 00:13:15,240
So,
所以，

213
00:13:17,630 --> 00:13:18,170
okay,
好的，没问题。

214
00:13:18,730 --> 00:13:22,410
so please ask questions and sorry,
所以请提问，抱歉，

215
00:13:23,140 --> 00:13:23,490
again,
再次，

216
00:13:24,380 --> 00:13:25,730
i've never used a minor.
我从未使用过次要设备。

217
00:13:26,450 --> 00:13:28,650
We are using it because it's more scalable,
我们使用它是因为它更具可扩展性。

218
00:13:29,340 --> 00:13:30,600
but is less interactive.
但是交互性较差。

219
00:13:33,900 --> 00:13:34,530
So,
那么，

220
00:13:35,220 --> 00:13:38,090
but we promise to improve on using these tools.
但我们承诺在使用这些工具上进行改进。

221
00:13:41,920 --> 00:13:46,730
So excellent.
太棒了。

222
00:13:48,650 --> 00:13:50,200
Again, just to summarize,
再次总结一下，

223
00:13:50,210 --> 00:13:52,360
and i'm going to repeat a lot of things,
而且我会重复很多事情，

224
00:13:53,010 --> 00:13:54,800
a lot of over and over again.
一次又一次的重复。

225
00:13:55,260 --> 00:13:57,370
So hopefully i'm not going to borrow you,
希望我不会打扰你，

226
00:13:57,380 --> 00:14:01,410
but there are actually not a lot of big concepts you are going to love
但实际上并没有很多你会喜欢的重要概念。

227
00:14:01,420 --> 00:14:02,130
in this class,
在这门课中，

228
00:14:02,140 --> 00:14:05,350
but the concepts are quite difficult and intricate it.
但是这些概念非常复杂和复杂。

229
00:14:05,790 --> 00:14:10,700
And also because they are going to interpret and interact with each other.
而且因为它们将相互解释和交互。

230
00:14:11,390 --> 00:14:12,550
But just to summarize,
但是为了总结一下，

231
00:14:12,560 --> 00:14:15,070
a process consists of an address space,
一个进程由一个地址空间组成，

232
00:14:15,780 --> 00:14:16,900
one or more thread.
一个或多个线程。

233
00:14:16,910 --> 00:14:18,620
And this is the control,
这是控制部分，

234
00:14:18,630 --> 00:14:20,940
the execution in that other space,
在那个其他空间中的执行

235
00:14:21,760 --> 00:14:24,270
a bunch of other resources, like files,
一堆其他资源，比如文件，

236
00:14:25,080 --> 00:14:26,550
sockets, and things like that.
套接字，以及类似的东西。

237
00:14:30,950 --> 00:14:32,340
This is activity monitor.
这是活动监视器。

238
00:14:32,910 --> 00:14:35,420
If you have a mac, if you go on here,
如果你有一台苹果电脑，如果你在这里打开，

239
00:14:35,430 --> 00:14:39,040
you can look and you can see all these processes.
你可以查看并看到所有这些进程。

240
00:14:40,760 --> 00:14:43,350
You can see, actually, the processes that tells you also,
你可以看到，实际上，这些进程也会告诉你，

241
00:14:43,360 --> 00:14:46,630
I think the column probably i'm not sure you see my mouse,
我觉得这一列可能，我不确定你是否看到了我的鼠标。

242
00:14:47,360 --> 00:14:49,320
but there is a column here called threats,
但是这里有一个名为"威胁"的列。

243
00:14:50,640 --> 00:14:50,940
right?
对的？

244
00:14:51,720 --> 00:14:53,070
This is unit of execution.
这是执行的单位。

245
00:14:53,570 --> 00:14:55,200
Basically, for chrome, here,
基本上，对于Chrome，在这里，

246
00:14:55,210 --> 00:14:58,240
you have 22 threads,
你有22个线程。

247
00:14:59,710 --> 00:15:07,040
22 activities which are running concurrently in the same process.
在同一个进程中同时运行的22个活动。

248
00:15:08,120 --> 00:15:09,320
Okay, so that's fine.
好的，那就没问题。

249
00:15:10,010 --> 00:15:10,350
Again,
请再说一遍。

250
00:15:11,640 --> 00:15:16,470
we obstructing away harder resources to the applications.
我们将更多的资源分配给应用程序。

251
00:15:16,480 --> 00:15:24,310
It's one of the main main things
这是其中的主要事情之一

252
00:15:24,320 --> 00:15:29,410
that the application is that the operating system is doing the main capabilities.
应用程序是操作系统的主要功能。

253
00:15:31,300 --> 00:15:32,780
Now, less,
现在，less命令

254
00:15:32,790 --> 00:15:34,540
we are going to look for other car.
我们打算去找其他的车。

255
00:15:34,550 --> 00:15:39,260
We are going to go over the other capabilities as the operating system provides,
我们将会讨论操作系统提供的其他功能。

256
00:15:40,140 --> 00:15:42,560
and to illustrate the need for the next one.
并且为下一个需求进行说明。

257
00:15:43,180 --> 00:15:47,460
Now assume that you are going to have not only one program,
现在假设你不仅要运行一个程序，

258
00:15:47,470 --> 00:15:51,560
but two programs to applications running on your machine.
但是在您的计算机上运行两个程序变成了两个应用程序。

259
00:15:51,850 --> 00:15:54,930
And that every actually today,
而且，今天实际上每个人都这样。

260
00:15:55,240 --> 00:15:56,940
almost every computer,
几乎每台计算机，

261
00:15:58,510 --> 00:15:59,820
your laptop,
你的笔记本电脑，

262
00:15:59,830 --> 00:16:01,180
your phone,
你的手机，

263
00:16:02,130 --> 00:16:05,720
allows you to run multiple applications,
允许您同时运行多个应用程序，

264
00:16:06,830 --> 00:16:09,160
which means multiple processes at the same time.
这意味着同时运行多个进程。

265
00:16:10,210 --> 00:16:10,580
Right?
对吗？

266
00:16:13,070 --> 00:16:14,650
This now,
现在，

267
00:16:14,660 --> 00:16:16,290
the point is that it's, again,
关键是，再次强调的是，

268
00:16:16,300 --> 00:16:18,410
it's like one of the abstractions.
这类似于抽象之一。

269
00:16:18,420 --> 00:16:24,010
Remember that I mentioned that the operations operating system provides
记住我提到过操作系统提供的操作。

270
00:16:24,020 --> 00:16:26,320
to the application is that
对于这个应用程序来说是这样的

271
00:16:26,330 --> 00:16:29,190
provides the illusion of a dedicated machine.
提供了一个独立机器的幻觉。

272
00:16:30,170 --> 00:16:30,560
Right?
对吗？

273
00:16:31,740 --> 00:16:35,170
But now how you are going to do it when you are going to have
但是现在当你要进行时，你打算如何做呢？

274
00:16:35,690 --> 00:16:38,480
multiple applications running at the same time,
同时运行多个应用程序

275
00:16:38,490 --> 00:16:41,000
because they are going to run on the same hardware.
因为它们将在相同的硬件上运行。

276
00:16:42,720 --> 00:16:46,770
Here is where it comes this kind of the other way you can look
这是另一种你可以看待问题的方式

277
00:16:46,780 --> 00:16:48,890
at the operating system as a fairy,
作为一个操作系统的精灵，

278
00:16:50,180 --> 00:16:54,880
because the only way you can provide the illusion of two applications,
是因为唯一的方法是提供两个应用程序的幻觉。

279
00:16:54,890 --> 00:16:55,560
and each of them,
并且每一个人，

280
00:16:55,570 --> 00:16:58,720
they have their own virtual machine.
他们有自己的虚拟机。

281
00:16:58,730 --> 00:17:03,450
So to speak is to protect one of each other,
所谓相互保护，就是互相保护对方。

282
00:17:04,160 --> 00:17:05,680
to isolate one of each other.
相互隔离。

283
00:17:06,460 --> 00:17:06,760
Right?
对吗？

284
00:17:06,770 --> 00:17:09,440
That's the only way here.
这是这里唯一的方法。

285
00:17:09,450 --> 00:17:10,400
It's just,
只是，

286
00:17:10,410 --> 00:17:14,730
let's go in a little bit more details to illustrate the need for that.
让我们更详细地讨论一下，以阐明对此的需求。

287
00:17:16,700 --> 00:17:17,190
Now,
现在，

288
00:17:18,940 --> 00:17:20,170
let's start with a processor.
让我们从处理器开始。

289
00:17:20,180 --> 00:17:21,970
So you have only one processor,
所以你只有一个处理器，

290
00:17:22,290 --> 00:17:23,740
and you have two applications,
而且你有两个应用程序，

291
00:17:23,750 --> 00:17:25,740
and you have to run on the same processor.
并且你必须在同一处理器上运行。

292
00:17:26,800 --> 00:17:29,220
At a given time, you can run on the processor,
在给定的时间内，你可以在处理器上运行。

293
00:17:29,230 --> 00:17:35,400
only one application to give the illusion that both of them are going to run.
只需要一个应用程序就能让人产生两个都会运行的错觉。

294
00:17:35,650 --> 00:17:37,400
They have their own machines.
他们有自己的机器。

295
00:17:37,410 --> 00:17:38,120
So to speak,
可以这么说，

296
00:17:39,060 --> 00:17:43,700
the way you do it is that you are going to divide the processor time
你要做的方式是将处理器时间分配。

297
00:17:44,370 --> 00:17:46,910
in slots or slices.
在插槽或切片中。

298
00:17:47,620 --> 00:17:50,490
Each slice, you have a different application running.
每个切片上都运行着不同的应用程序。

299
00:17:51,750 --> 00:17:55,050
The slices are a few million seconds.
这些切片是几百万秒。

300
00:17:56,980 --> 00:18:00,510
1 millisecond, 10 millisecond things like is something like that.
1 毫秒，10 毫秒这样的东西就是这样的。

301
00:18:01,010 --> 00:18:01,210
Right?
对吗？

302
00:18:01,340 --> 00:18:02,610
In this particular example,
在这个特定的例子中，

303
00:18:02,620 --> 00:18:05,880
you have the brown application running.
你的应用程序正在运行。

304
00:18:06,260 --> 00:18:08,100
If you can see here,
如果你能看到这里，

305
00:18:08,110 --> 00:18:10,320
the processor access is a memory,
处理器访问内存。

306
00:18:10,330 --> 00:18:16,190
which is in the process allocated to the brown process one.
这是分配给棕色进程一的进程。

307
00:18:17,000 --> 00:18:20,090
It read it reads a code and executes that code.
它读取并执行一段代码。

308
00:18:20,410 --> 00:18:22,260
Is there for running program on?
是否有可运行的程序？

309
00:18:24,740 --> 00:18:25,130
Right?
对吗？

310
00:18:26,320 --> 00:18:27,190
But now,
但是现在，

311
00:18:28,300 --> 00:18:28,780
next,
接下来，

312
00:18:29,300 --> 00:18:31,350
you will also have program two, support.
你还将拥有程序二的支持。

313
00:18:31,360 --> 00:18:32,510
Program two in memory,
将程序二加载到内存中，

314
00:18:32,520 --> 00:18:35,630
also have some piece of,
还有一些部分，

315
00:18:36,370 --> 00:18:39,690
you also have some piece of memory which is allocated to process,
你还有一些分配给进程的内存空间。

316
00:18:41,080 --> 00:18:41,380
right?
是的，没错。

317
00:18:43,180 --> 00:18:45,120
At some point,  Right?
在某个时候，对吗？

318
00:18:45,930 --> 00:18:47,160
You run at some..
你以某种速度奔跑..

319
00:18:47,170 --> 00:18:47,720
Now.
现在。

320
00:18:48,200 --> 00:18:50,480
I said after a little bit of time,
经过一小段时间后，我说道，

321
00:18:50,490 --> 00:18:52,720
you allocate to program one to run.
你分配给程序一来运行。

322
00:18:53,080 --> 00:18:55,130
Now you are going to switch the program, too.
现在你也要切换程序了。

323
00:18:56,650 --> 00:18:57,400
You are going to run.
你要开始跑步了。

324
00:18:59,190 --> 00:19:03,070
And by doing so and switching at a very high frequency,
通过这样做并以非常高的频率进行切换，

325
00:19:03,080 --> 00:19:09,830
you give the evening is an illusion to each of these applications that it's
你给这些应用程序的晚上是一个幻觉

326
00:19:09,840 --> 00:19:11,750
using the computer allowed.
允许使用计算机。

327
00:19:12,760 --> 00:19:13,120
Right?
对吗？

328
00:19:14,740 --> 00:19:17,250
Now, the problem here, if you can see, for instance,
现在，问题在于，如果你能看到的话，例如，

329
00:19:17,260 --> 00:19:18,610
if you look at the memory,
如果你查看内存，

330
00:19:18,620 --> 00:19:20,370
you're having the same memory,
你们拥有相同的内存空间。

331
00:19:20,380 --> 00:19:21,410
physical memory.
物理内存。

332
00:19:21,420 --> 00:19:23,890
You have the data from multiple applications,
你拥有来自多个应用程序的数据，

333
00:19:23,900 --> 00:19:26,320
and they have to to read and write the data.
他们必须读取和写入数据。

334
00:19:27,750 --> 00:19:28,000
Right?
对吗？

335
00:19:28,690 --> 00:19:30,340
And certainly,
当然，

336
00:19:30,350 --> 00:19:31,580
you do not want,
你不想要。

337
00:19:31,930 --> 00:19:32,990
say, in this case,
在这种情况下，

338
00:19:33,000 --> 00:19:41,630
a program to our process to read or even more to write the data in process on.
一个程序可以让我们的进程读取甚至写入进程中的数据。

339
00:19:42,490 --> 00:19:42,880
Right?
对吗？

340
00:19:43,490 --> 00:19:47,720
You also don't run the any process store for that matter.
你也不需要运行任何进程存储。

341
00:19:47,730 --> 00:19:54,430
Of fact, any process to write to modify the operating system memory.
实际上，任何进程都可以写入或修改操作系统内存。

342
00:19:56,170 --> 00:19:56,560
Right?
对吗？

343
00:19:57,950 --> 00:20:00,320
Because then the operating system may crash.
因为这样操作系统可能会崩溃。

344
00:20:00,970 --> 00:20:02,460
If you write up an application,
如果你写了一个应用程序，

345
00:20:02,470 --> 00:20:04,240
modify the operating system in memory.
在内存中修改操作系统。

346
00:20:06,990 --> 00:20:09,550
And also you need to be careful with the storage.
你还需要注意存储空间。

347
00:20:10,170 --> 00:20:10,350
Right?
对吗？

348
00:20:10,360 --> 00:20:13,920
You shouldn't allow one program,
你不应该允许一个程序，

349
00:20:14,490 --> 00:20:21,070
two of one user to modify the data of another users,
一个用户修改了另一个用户的数据。

350
00:20:21,080 --> 00:20:26,420
especially if that data is private or read it.
尤其是当数据是私密的或需要读取时。

351
00:20:26,430 --> 00:20:26,650
Okay?
好的？

352
00:20:27,980 --> 00:20:29,900
So this is what we mean.
这就是我们的意思。

353
00:20:30,250 --> 00:20:32,550
Now you need to you protect protection,
现在你需要保护自己的安全。

354
00:20:32,560 --> 00:20:35,480
so you need to protect one application,
所以你需要保护一个应用程序，

355
00:20:35,490 --> 00:20:36,760
one process from another.
一个进程从另一个进程中创建。

356
00:20:36,770 --> 00:20:39,400
You need to protect one process from the operating system,
你需要保护一个进程免受操作系统的干扰。

357
00:20:40,310 --> 00:20:43,800
and protect the operating system from the process.
并保护操作系统免受进程的影响。

358
00:20:45,400 --> 00:20:45,720
Right?
对吗？

359
00:20:46,930 --> 00:20:56,230
When an application on a program tries to execute some of these actions,
当程序中的应用程序尝试执行其中一些操作时，

360
00:20:58,440 --> 00:21:04,460
which are precluded like accessing the data of the memory,
被禁止的操作包括访问内存中的数据，

361
00:21:04,470 --> 00:21:06,410
which belongs to another process,
它属于另一个进程。

362
00:21:07,460 --> 00:21:10,870
or accessing the memory belongs to the operating system.
或者访问属于操作系统的内存。

363
00:21:12,320 --> 00:21:13,840
The operating system,
操作系统，

364
00:21:14,180 --> 00:21:17,140
one way is going to deal with this offending application,
一种方法是处理这个冒犯的应用程序，

365
00:21:17,150 --> 00:21:20,870
is crashing the processing segmentation fault.
正在崩溃处理分段错误。

366
00:21:25,210 --> 00:21:25,770
But it's, again,
但是，再一次，

367
00:21:25,780 --> 00:21:32,410
the main point here is that in order to create this illusion of to
这里的主要观点是，为了营造这种错觉，我们需要

368
00:21:32,420 --> 00:21:35,380
a process that they are using the machine alone,
一个独自使用机器的进程

369
00:21:35,390 --> 00:21:40,450
you need to isolate and to protect processes from each other.
你需要将进程隔离并保护它们相互之间的安全。

370
00:21:42,230 --> 00:21:42,680
Also,
另外，

371
00:21:42,690 --> 00:21:47,320
in order to make sure that the operating system itself is not crashes a as
为了确保操作系统本身不会崩溃

372
00:21:47,330 --> 00:21:48,120
a result,
结果，

373
00:21:49,280 --> 00:21:55,890
processes modifying operating system data,
修改操作系统数据的进程，

374
00:21:56,970 --> 00:22:03,420
then we need also to isolate the operating system itself from the processes.
那么我们还需要将操作系统本身与进程隔离开来。

375
00:22:05,680 --> 00:22:06,030
Right?
对吗？

376
00:22:11,230 --> 00:22:11,820
Let's see.
让我们看看。

377
00:22:16,320 --> 00:22:17,590
I was looking at the question,
我正在看这个问题，

378
00:22:17,600 --> 00:22:20,030
why is a good time for learning oils right now?
为什么现在是学习油画的好时机？

379
00:22:20,040 --> 00:22:26,440
It's again, we are going stick around until for the next half an hour or.
好的，我们会再等待半个小时左右。

380
00:22:31,020 --> 00:22:32,350
So so now,
所以现在，

381
00:22:33,100 --> 00:22:38,740
the last way we can look at the operating system is like a glue.
我们可以将操作系统看作是一种胶水的最后一种方式。

382
00:22:39,510 --> 00:22:39,960
Right?
对吗？

383
00:22:41,280 --> 00:22:42,030
Why is that?
为什么这样做呢？

384
00:22:43,350 --> 00:22:43,700
Again,
请再说一遍。

385
00:22:44,320 --> 00:22:46,070
it's very logic, right?
这很合乎逻辑，对吗？

386
00:22:46,080 --> 00:22:46,750
Illogical.
不合逻辑的。

387
00:22:48,060 --> 00:22:48,780
First,
首先，

388
00:22:49,200 --> 00:22:52,430
you need to abstract those harder to make it
你需要将那些较难的内容进行抽象化处理

389
00:22:52,440 --> 00:22:55,870
much easier for the application developers to write applications.
这使得应用程序开发人员编写应用程序变得更加容易。

390
00:22:57,940 --> 00:22:58,770
Second,
其次，

391
00:22:59,510 --> 00:23:02,040
you need to provide protection, isolations,
你需要提供保护和隔离功能。

392
00:23:02,960 --> 00:23:05,930
because typically, you are going to have multiple applications,
因为通常情况下，您会有多个应用程序。

393
00:23:05,940 --> 00:23:07,250
multiple processes,
多个进程

394
00:23:07,650 --> 00:23:10,000
sharing the same part.
共享同一部分。

395
00:23:11,700 --> 00:23:18,300
And the final part is that these applications or some applications
最后一部分是这些应用程序或一些应用程序

396
00:23:18,540 --> 00:23:20,510
are communicating with each other.
正在彼此通信。

397
00:23:21,910 --> 00:23:26,090
So you need to provide some kind of glue between them to provide
所以你需要提供一种粘合剂来连接它们以提供

398
00:23:26,100 --> 00:23:27,810
some common services.
一些常见的服务。

399
00:23:30,450 --> 00:23:34,220
This is coming the form of networking or storage.
这是关于网络或存储的问题。

400
00:23:34,800 --> 00:23:37,750
You can application can communicate through files,
你的应用程序可以通过文件进行通信。

401
00:23:38,670 --> 00:23:39,950
one application write in a files,
一个应用程序写入一个文件中，

402
00:23:39,960 --> 00:23:41,470
another application read from a file.
另一个应用程序从文件中读取。

403
00:23:45,520 --> 00:23:49,320
Obviously, this also comes with authorization and things like that.
显然，这也涉及到授权和类似的事情。

404
00:23:50,730 --> 00:23:56,940
But this is where you can think about the operating system as a glue.
但这就是你可以将操作系统视为胶水的地方。

405
00:23:57,960 --> 00:23:58,340
Right?
对吗？

406
00:24:00,860 --> 00:24:04,390
They need to provide the communications,
他们需要提供通信设备。

407
00:24:04,960 --> 00:24:09,030
enable you the ability to share the resources.
使您能够共享资源的能力。

408
00:24:09,910 --> 00:24:11,760
And again,
再次，

409
00:24:11,770 --> 00:24:16,440
the common the operating system is doing that by providing these common services,
常见的操作系统通过提供这些常见服务来实现这一点。

410
00:24:17,170 --> 00:24:19,290
file systems, networking,
文件系统，网络

411
00:24:19,850 --> 00:24:20,400
so forth.
等等。

412
00:24:24,030 --> 00:24:25,080
I'm going to stop here.
我要停在这里了。

413
00:24:25,090 --> 00:24:26,480
Are there any questions?
有任何问题吗？

414
00:24:33,830 --> 00:24:34,660
One question is,
一个问题是，

415
00:24:34,670 --> 00:24:38,700
what are the methods that allow different processes to talk with each other?
允许不同进程之间进行通信的方法有哪些？

416
00:24:40,350 --> 00:24:42,020
I know your socket communication.
我知道你的套接字通信。

417
00:24:42,030 --> 00:24:43,100
It's a valid method.
这是一个有效的方法。

418
00:24:43,960 --> 00:24:45,100
So there are a few of them,
所以有几个问题，

419
00:24:45,110 --> 00:24:47,220
and we are going to learn about them.
我们将要学习它们。

420
00:24:48,300 --> 00:24:50,210
One is me soccer communication,
一个是我足球交流。

421
00:24:50,220 --> 00:24:51,530
so it's like networking.
所以它就像网络一样。

422
00:24:52,100 --> 00:24:52,530
Right?
对吗？

423
00:24:53,070 --> 00:24:57,420
You can communicate with each other to processes whether they are
你可以通过进程间通信来相互交流，无论它们是什么类型的进程。

424
00:24:57,430 --> 00:24:59,740
on the same machine or different machines,
在同一台机器上或不同的机器上，

425
00:25:00,300 --> 00:25:03,260
through sockets, through a network interface.
通过套接字，通过网络接口。

426
00:25:07,150 --> 00:25:09,220
The processes which are on the same machine,
在同一台机器上的进程

427
00:25:09,230 --> 00:25:11,620
they can also communicate through share memory.
它们还可以通过共享内存进行通信。

428
00:25:12,640 --> 00:25:15,520
You can also have the ability to communicate with share memory.
你还可以通过共享内存进行通信的能力。

429
00:25:16,670 --> 00:25:18,440
And also, like I mentioned earlier,
而且，正如我之前提到的，

430
00:25:18,450 --> 00:25:20,400
you can communicate through storage.
你可以通过存储进行通信。

431
00:25:23,400 --> 00:25:28,630
An application can write a piece of data on the store on the local file system,
一个应用程序可以将一段数据写入本地文件系统的存储空间。

432
00:25:29,120 --> 00:25:31,150
or even for a global file system.
甚至可以用于全局文件系统。

433
00:25:31,880 --> 00:25:34,570
And others application can read.
其他应用程序也可以读取。

434
00:25:36,740 --> 00:25:37,180
Okay?
好的？

435
00:25:40,020 --> 00:25:42,980
Is a processor just what we call a cpu?
处理器就是我们所说的中央处理器（CPU）吗？

436
00:25:45,140 --> 00:25:47,760
For most cases, these are interchangeable,
在大多数情况下，这两者是可以互换的。

437
00:25:48,890 --> 00:25:52,950
although we are also going to call processor like specialized, harder,
虽然我们也会将处理器称为专用、更难的设备，

438
00:25:53,280 --> 00:25:54,570
specialized processors,
专用处理器

439
00:25:55,230 --> 00:25:55,470
several.
几个。

440
00:25:55,480 --> 00:25:56,910
So it's a little bit broader,
所以它稍微更广泛一些，

441
00:25:57,830 --> 00:26:00,120
but unless has a right specified the equivalence.
但是除非有明确指定的等价性，否则不会执行。

442
00:26:02,070 --> 00:26:02,550
Ha ha ha.
哈哈哈。

443
00:26:03,600 --> 00:26:06,830
Will adam replace x 86 in consumer space?
亚当架构会在消费者领域取代x86吗？

444
00:26:10,250 --> 00:26:15,640
Ii it's clear that autumn has a lot of momentum right now.
很明显，秋天现在有很大的势头。

445
00:26:16,660 --> 00:26:17,790
One example,
一个例子，

446
00:26:21,570 --> 00:26:24,230
obviously, it's m one from apple.
显然，这是来自苹果公司的产品。

447
00:26:26,470 --> 00:26:29,020
You see that become more and more proud, powerful,
你会发现越来越自豪、强大，

448
00:26:29,030 --> 00:26:34,750
but there are also arm starts to be deployed in data centers.
但是现在也开始在数据中心部署 ARM 架构的服务器。

449
00:26:36,020 --> 00:26:41,530
Actually, there is one new instance which from amazon called graviton.
实际上，亚马逊推出了一种名为Graviton的新实例。

450
00:26:42,760 --> 00:26:45,250
This is around armed processor.
这是关于武装处理器的内容。

451
00:26:46,690 --> 00:26:48,210
And it's quite fast.
而且它非常快速。

452
00:26:48,220 --> 00:26:51,500
It's actually his very good performance and is cheaper.
实际上，这是他非常出色的表现，并且价格更便宜。

453
00:26:53,560 --> 00:26:54,710
Now, we'll see, right?
现在，我们就看看，对吧？

454
00:26:54,720 --> 00:26:58,090
Because what intel is going to do,
因为英特尔将要做的事情，

455
00:26:58,840 --> 00:27:01,520
clearly, they announce a bunch of initiatives,
显然，他们宣布了一系列的举措，

456
00:27:02,210 --> 00:27:03,360
but adam,
但是亚当，

457
00:27:03,650 --> 00:27:09,180
it's has a lot of momentum at this..
这个在这方面有很大的动力..

458
00:27:18,190 --> 00:27:22,010
Let me go here.
让我过去这里。

459
00:27:25,310 --> 00:27:27,380
There is something about visualization.
关于可视化有一些内容。

460
00:27:29,040 --> 00:27:32,740
There is something about there are a few more questions here.
这里有几个问题。

461
00:27:32,750 --> 00:27:34,240
Let me ask answer them.
让我来回答它们。

462
00:27:36,820 --> 00:27:39,320
It's one question on the chap.
这是第几章的一个问题。

463
00:27:39,680 --> 00:27:47,960
By the way, please try to ask question for on q and a so I have one source.
顺便说一下，请尽量在问答环节提出问题，这样我就有一个信息来源了。

464
00:27:47,970 --> 00:27:49,350
I can read them from.
我可以读取它们。

465
00:27:52,240 --> 00:28:00,900
So there's a lot of there are some comments about vmy about visualization.
关于虚拟化的问题，有一些关于vmy的评论。

466
00:28:01,310 --> 00:28:06,420
We are going to talk about visualization even a little bit during this lecture.
在本讲座中，我们将稍微谈一下可视化。

467
00:28:08,060 --> 00:28:14,120
But visualization is a way to provide the illusion to every process
但是可视化是一种为每个进程提供幻觉的方式。

468
00:28:14,130 --> 00:28:17,690
to every application that they are using.
对于他们使用的每个应用程序。

469
00:28:18,580 --> 00:28:20,470
They're using alone the machine.
他们独自使用这台机器。

470
00:28:21,940 --> 00:28:24,330
There is another question about risk five.
关于 Risk-V 的问题还有一个。

471
00:28:25,320 --> 00:28:27,900
This obviously was done at berkeley.
这显然是在伯克利完成的。

472
00:28:27,910 --> 00:28:34,890
I think these five it's has a great future.
我认为这五个项目有着很好的前景。

473
00:28:36,730 --> 00:28:38,560
And for those of you don't know,
对于那些不知道的人，

474
00:28:38,570 --> 00:28:42,200
at least five is an open instruction set architecture,
至少有五个是开放指令集架构。

475
00:28:42,930 --> 00:28:48,060
which means that you don't need to pay any license to use it,
这意味着您使用它时不需要支付任何许可费。

476
00:28:49,010 --> 00:28:52,510
to build process to build processors around it.
构建围绕它的处理器的过程。

477
00:28:54,790 --> 00:28:57,000
In contrast, arm for arm,
相比之下，一臂对一臂，

478
00:28:57,010 --> 00:29:03,650
you need to pay life license in order to use and to provide the art
您需要支付终身许可费才能使用和提供这些艺术作品。

479
00:29:03,660 --> 00:29:04,820
of instruction set.
指令集

480
00:29:10,950 --> 00:29:11,900
But risk five.
但是风险很高。

481
00:29:11,910 --> 00:29:21,670
Now it's targeting internet of things or mobile devices, very low power.
现在它的目标是物联网或移动设备，非常低功耗。

482
00:29:23,420 --> 00:29:25,010
This is how they started,
这是他们的起点，

483
00:29:25,020 --> 00:29:27,250
but this is the way they are started.
但这是它们启动的方式。

484
00:29:28,340 --> 00:29:31,860
So you'll see maybe a risk.
所以你可能会看到一些风险。

485
00:29:31,870 --> 00:29:36,550
There is a chance that are going to follow the trajectory of arm.
有可能会跟随臂的轨迹。

486
00:29:36,560 --> 00:29:41,450
And it can become for arm what arm is for into.
它可以成为 ARM 对于 Into 的那样的 ARM。

487
00:29:43,210 --> 00:29:45,830
But again, it's obvious this is in the future,
但是再次强调，显然这是在未来发生的事情，

488
00:29:47,930 --> 00:29:49,290
but obviously,
但显然，

489
00:29:49,300 --> 00:29:50,890
it has a lot of promise.
它有很大的潜力。

490
00:29:52,420 --> 00:29:55,570
I'm going to go back now to the lecture slides.
我现在要回到讲义幻灯片了。

491
00:30:05,870 --> 00:30:06,140
Again,
请再说一遍。

492
00:30:06,150 --> 00:30:12,970
this is give examples about some of the services which are provided
这是关于一些提供的服务的示例。

493
00:30:12,980 --> 00:30:14,090
by the operating system.
由操作系统完成。

494
00:30:14,100 --> 00:30:15,650
We didn't discuss so far.
我们到目前为止还没有讨论过。

495
00:30:17,130 --> 00:30:24,630
And some of the management services and does the operating system provides,
操作系统提供了一些管理服务，包括：

496
00:30:24,640 --> 00:30:27,110
and maybe you do not think right away to them.
也许你不会立刻想到它们。

497
00:30:27,690 --> 00:30:29,090
It's like power management,
这类似于电源管理，

498
00:30:30,090 --> 00:30:30,450
correct?
正确吗？

499
00:30:31,030 --> 00:30:32,940
Or especially for mobile devices,
特别是针对移动设备，

500
00:30:33,460 --> 00:30:34,890
you need to manage the power.
你需要管理电源。

501
00:30:35,560 --> 00:30:36,950
And across the application,
在整个应用程序中，

502
00:30:36,960 --> 00:30:40,510
if you have an application which user is proportionate amount of battery,
如果你有一个应用程序会消耗用户相应的电池电量，

503
00:30:40,520 --> 00:30:44,070
maybe you want to isolate to protect other applications from that.
也许你想要隔离以保护其他应用程序。

504
00:30:47,190 --> 00:30:48,740
You need to manage a network.
你需要管理一个网络。

505
00:30:48,750 --> 00:30:51,940
You need to manage almost every shared resource,
你需要管理几乎所有的共享资源，

506
00:30:52,740 --> 00:30:53,200
right?
对的？

507
00:30:56,180 --> 00:30:58,980
When I I referred shared by multiple applications.
当我被多个应用程序引用时。

508
00:31:00,300 --> 00:31:01,250
So in summary,
总结一下，

509
00:31:02,080 --> 00:31:02,560
it's, again,
又是，

510
00:31:03,400 --> 00:31:03,930
repeating.
重复。

511
00:31:05,270 --> 00:31:06,540
There are three things.
有三件事情。

512
00:31:07,210 --> 00:31:08,600
An operating system is doing.
操作系统是一种软件，它管理计算机硬件和软件资源，并提供用户与计算机系统之间的接口。它负责协调和控制计算机的各个组件，以确保系统的正常运行。操作系统的主要功能包括进程管理、内存管理、文件系统管理、设备驱动程序管理和用户界面管理等。它还提供了一些基本的服务和工具，如调度程序、内存分配器、文件系统和网络协议栈等，以支持应用程序的运行和用户的操作。总之，操作系统是计算机系统中不可或缺的核心组件，它使计算机能够高效地运行和管理各种任务。

513
00:31:09,500 --> 00:31:14,950
One is providing a clean easy to use abstractions of the physical resources
其中之一是提供对物理资源的清晰易用的抽象化。

514
00:31:15,250 --> 00:31:16,030
to the application,
至于应用程序，

515
00:31:16,270 --> 00:31:20,210
make it much easier for application developers to develop this application.
使应用程序开发人员更容易开发这个应用程序。

516
00:31:21,070 --> 00:31:23,350
And this means like you can think about this,
这意味着你可以考虑一下这个问题，

517
00:31:23,360 --> 00:31:25,470
like is like you lose your list,
喜欢就像你失去了清单一样

518
00:31:27,280 --> 00:31:31,430
then which follows from providing clean abstractions.
这是提供清晰抽象的结果。

519
00:31:31,820 --> 00:31:34,150
You can think about operating system as a referee.
你可以将操作系统视为一名裁判。

520
00:31:34,510 --> 00:31:35,650
And in this case,
在这种情况下，

521
00:31:35,990 --> 00:31:43,630
the operating system provides protection and isolation of shared resources across
操作系统提供了对共享资源的保护和隔离。

522
00:31:43,930 --> 00:31:47,000
for multiple applications.
用于多个应用程序。

523
00:31:47,960 --> 00:31:48,310
Right?
对吗？

524
00:31:49,080 --> 00:31:50,270
We share those resources.
我们共享这些资源。

525
00:31:53,120 --> 00:32:01,050
And the final is that it's a glue that operating system provides common
最终的结果是，操作系统提供了一个常见的粘合剂。

526
00:32:01,060 --> 00:32:07,540
services in particularly also enables this application to communicate
特别是服务，还使得该应用程序能够进行通信。

527
00:32:07,550 --> 00:32:08,260
to each other.
彼此之间。

528
00:32:11,670 --> 00:32:13,960
So now,
所以现在，

529
00:32:15,580 --> 00:32:21,200
let's talk a little bit more about cs one city to,
让我们再多谈谈关于CS One City的事情吧。

530
00:32:21,540 --> 00:32:21,980
in general,
一般来说，

531
00:32:21,990 --> 00:32:28,710
and then talk a little bit about why now and why it's exciting and challenging.
然后稍微谈谈为什么现在进行这项工作，以及为什么它令人兴奋和具有挑战性。

532
00:32:30,950 --> 00:32:32,990
Why take cs on ct two?
为什么要在计算机科学专业上修读计算机操作系统课程？

533
00:32:33,000 --> 00:32:33,510
It's again,
又是这样，

534
00:32:33,520 --> 00:32:36,370
because some of you will actually design and build operating system
因为你们中的一些人将会设计和构建操作系统。

535
00:32:37,200 --> 00:32:40,250
or components of them like file systems,
或者它们的组成部分，比如文件系统，

536
00:32:40,260 --> 00:32:40,450
right?
对的吗？

537
00:32:41,260 --> 00:32:42,370
You go to google,
你去谷歌搜索。

538
00:32:42,380 --> 00:32:43,770
you may work on android.
你可以在Android上工作。

539
00:32:44,780 --> 00:32:46,300
For instance, you go like apple,
例如，你可以说像苹果一样。

540
00:32:46,310 --> 00:32:48,240
you may or microsoft,
你可以选择微软或者其他公司。

541
00:32:48,250 --> 00:32:49,880
you may work on their operating systems,
你可能会在他们的操作系统上工作，

542
00:32:50,790 --> 00:32:58,530
or if you are to any company which depend running its software on linux,
或者如果你是任何依赖于在Linux上运行其软件的公司的一员，

543
00:32:58,540 --> 00:33:04,230
you might work on linux to provide new capabilities for the applications
你可以在Linux上工作，为应用程序提供新的功能。

544
00:33:04,240 --> 00:33:06,410
that are important for your company.
对于您的公司而言，这些是重要的。

545
00:33:10,600 --> 00:33:15,950
But many of you are going to build software which run on top
但是你们中的许多人将要构建运行在上面的软件

546
00:33:15,960 --> 00:33:17,030
of the operating systems.
操作系统的种类。

547
00:33:17,270 --> 00:33:18,610
And to build better software,
为了构建更好的软件，

548
00:33:18,620 --> 00:33:21,610
you need to understand how the operating system was working.
你需要理解操作系统是如何工作的。

549
00:33:22,340 --> 00:33:23,980
You need to understand to the concepts.
你需要理解这些概念。

550
00:33:27,630 --> 00:33:29,060
That's what it is.
就是这样。

551
00:33:30,860 --> 00:33:31,310
So next,
接下来，

552
00:33:31,320 --> 00:33:35,110
i'm going to talk about what makes operating system exciting and challenging.
我将要谈论的是什么使操作系统变得令人兴奋和具有挑战性。

553
00:33:36,290 --> 00:33:38,800
Let me check again for the questions.
让我再检查一下问题。

554
00:33:51,390 --> 00:33:54,310
How can application interact with these common services
应用程序如何与这些常见服务进行交互？

555
00:33:54,980 --> 00:33:58,220
through the api application programming interfaces?
通过应用程序编程接口（API）？

556
00:34:00,210 --> 00:34:03,140
I mentioned a little bit in passing earlier on.
我之前只是顺便提到了一点。

557
00:34:04,050 --> 00:34:08,530
These are exposed by system libraries.
这些是由系统库公开的。

558
00:34:09,620 --> 00:34:10,090
Right?
对吗？

559
00:34:10,600 --> 00:34:12,570
For instance, if you want to access a file,
例如，如果你想访问一个文件，

560
00:34:12,580 --> 00:34:17,140
you are going to have an api to access that file, read, write,
你将拥有一个API来访问该文件，进行读取和写入操作。

561
00:34:17,150 --> 00:34:22,340
seek the same for sending our communication,
寻求相同的方式来发送我们的通信，

562
00:34:23,050 --> 00:34:24,570
sending and receiving data.
发送和接收数据。

563
00:34:25,000 --> 00:34:28,880
You are going to have another api and this is exposed
你将会有另一个API，并且这个API是公开的。

564
00:34:28,890 --> 00:34:32,190
by these system libraries and implement it.
通过这些系统库来实现它。

565
00:34:33,940 --> 00:34:35,770
Why does searching for files from windows?
为什么要从Windows中搜索文件？

566
00:34:35,780 --> 00:34:38,530
File explorer for this feels super slow?
这个文件浏览器感觉非常慢？

567
00:34:39,110 --> 00:34:39,870
Unfortunately, I don't know.
很抱歉，我不知道。

568
00:34:39,880 --> 00:34:41,950
Ii have no answer to that question,
我对这个问题没有答案。

569
00:34:41,960 --> 00:34:43,800
but if you get the answer,
但是如果你得到了答案，

570
00:34:43,810 --> 00:34:45,160
i'll be interested in the answer.
我对答案感兴趣。

571
00:34:52,350 --> 00:34:56,430
In short, what makes the system,
简而言之，系统的特点有哪些？

572
00:34:56,440 --> 00:34:57,910
the operating system?
操作系统？

573
00:34:58,400 --> 00:34:59,070
Now,
现在，

574
00:35:00,110 --> 00:35:03,860
extremely exciting is because there are many things happen.
非常令人兴奋的原因是因为发生了许多事情。

575
00:35:04,190 --> 00:35:05,810
In the next few slides,
在接下来的几张幻灯片中，

576
00:35:06,110 --> 00:35:08,190
i'm going to tell you what happens.
我将告诉你发生了什么事情。

577
00:35:08,200 --> 00:35:13,200
And these things actually makes operating systems,
这些事情实际上构成了操作系统，

578
00:35:15,340 --> 00:35:18,980
addressing the operating system problems more difficult,
解决操作系统问题更加困难

579
00:35:19,470 --> 00:35:22,430
and hopefully more rewarding once you solve the problems.
一旦你解决了问题，希望会更有回报。

580
00:35:24,020 --> 00:35:25,710
So as you probably know,
正如你可能知道的，

581
00:35:27,360 --> 00:35:33,450
i'm sure everyone heard that many times for the more than 50 years,
我确定大家在过去50多年中听过这句话很多次了。

582
00:35:34,480 --> 00:35:36,030
all our industry,
我们所有的行业，

583
00:35:36,250 --> 00:35:38,050
hardware industry, software industry,
硬件行业，软件行业

584
00:35:39,140 --> 00:35:43,960
and large part was really driven by the morsel.
而且很大一部分确实是由这块小块驱动的。

585
00:35:46,540 --> 00:35:48,100
Machines are harder,
机器更难操作，

586
00:35:48,110 --> 00:35:52,200
becoming more and more powerful, very fast.
变得越来越强大，速度非常快。

587
00:35:54,350 --> 00:35:55,990
So according to gordon moore,
根据戈登·摩尔的说法，

588
00:35:56,000 --> 00:35:58,300
who was a co founder of intel,
英特尔的联合创始人是谁？

589
00:35:59,300 --> 00:36:00,130
in 65,
在65年中，

590
00:36:00,140 --> 00:36:04,610
he predicted that the transistor density of semiconductor chips will double
他预测半导体芯片的晶体管密度将翻倍。

591
00:36:04,620 --> 00:36:06,010
roughly every 2 years.
大约每两年一次。

592
00:36:08,290 --> 00:36:10,290
There's a morse law, right?
是的，有摩尔定律。

593
00:36:10,640 --> 00:36:13,010
And you have this plus here.
你在这里有一个加号。

594
00:36:13,820 --> 00:36:14,810
You see a line,
你看到一条线。

595
00:36:14,820 --> 00:36:19,250
but you have see a line on the x axis is a time on the y axis.
但是你在x轴上看到的是时间，在y轴上。

596
00:36:19,830 --> 00:36:23,150
It's the performance or the number of transistors.
这是性能或晶体管数量的问题。

597
00:36:25,480 --> 00:36:29,120
And you have a line y because the y axis is in log scale.
而且你有一条y轴线，因为y轴是以对数刻度显示的。

598
00:36:31,930 --> 00:36:32,210
Now,
现在，

599
00:36:33,410 --> 00:36:40,500
morris law says the transistor density doubles roughly every 2 years.
摩尔定律指出，晶体管密度大约每两年翻倍一次。

600
00:36:40,510 --> 00:36:42,700
So on the same area,
在同一区域上，

601
00:36:42,710 --> 00:36:45,630
you can cram twice as many transistors.
你可以将两倍的晶体管塞进去。

602
00:36:47,240 --> 00:36:53,890
This leads to the performance of the processor doubling roughly every 18 months.
这导致处理器性能大约每18个月翻倍一次。

603
00:36:54,470 --> 00:36:55,270
Why discrepancy?
为什么存在差异？

604
00:36:55,280 --> 00:36:57,240
The discrepancy is?
差异是什么？

605
00:36:57,250 --> 00:37:01,840
Because since the transistors are becoming closer to each other,
由于晶体管之间的距离越来越近，

606
00:37:01,850 --> 00:37:08,190
the latency between transistors to communicate between transistors decreases.
晶体管之间的通信延迟减小了。

607
00:37:08,200 --> 00:37:14,810
And therefore, you have double reasons you have that are these compounds
因此，你有双重理由拥有这些化合物。

608
00:37:16,550 --> 00:37:19,940
to increasing the transistor density.
增加晶体管密度。

609
00:37:20,360 --> 00:37:21,670
And therefore,
因此，

610
00:37:21,680 --> 00:37:24,070
the performance increases a little bit faster,
性能提升速度稍微快一点，

611
00:37:24,840 --> 00:37:26,280
or used to increase a little bit faster.
或者用于稍微加快速度。

612
00:37:31,710 --> 00:37:36,880
The challenge is that the modest law ended.
挑战在于适度的法律已经结束。

613
00:37:38,760 --> 00:37:39,260
Okay?
好的？

614
00:37:40,480 --> 00:37:41,000
This again,
又是这个问题，

615
00:37:41,010 --> 00:37:48,750
it shows here is a performance versus time the performance
这里显示的是性能随时间的变化情况，即性能与时间的关系。

616
00:37:48,760 --> 00:37:51,000
of a single court for processor.
一个处理器的单个核心

617
00:37:52,510 --> 00:37:58,350
And between 1995 and2002 or 2003,
在1995年和2002年或2003年之间，

618
00:37:58,760 --> 00:38:01,210
this was what you see here is green.
你在这里看到的是绿色的。

619
00:38:01,830 --> 00:38:04,940
This is the golden age,
这是黄金时代，

620
00:38:06,400 --> 00:38:07,020
so to speak,
可以这么说，

621
00:38:08,060 --> 00:38:10,950
because in this period,
因为在这个时期，

622
00:38:12,470 --> 00:38:16,600
but 4 months increased,
但是增加了4个月。

623
00:38:16,610 --> 00:38:18,600
doubled every 18 months,
每18个月翻一倍。

624
00:38:19,050 --> 00:38:21,410
or increase 52% of the year.
或者增长52%的年份。

625
00:38:24,080 --> 00:38:30,800
And the problem right now is that this performance will call increasing
目前的问题是性能会不断增加。

626
00:38:30,810 --> 00:38:32,520
just a few percent every year.
每年只有几个百分点。

627
00:38:39,280 --> 00:38:40,650
So this is a big problem.
这是一个很大的问题。

628
00:38:42,320 --> 00:38:43,980
Why it is a big problem,
为什么这是一个大问题？

629
00:38:43,990 --> 00:38:45,100
because at that time,
因为那个时候，

630
00:38:45,380 --> 00:38:52,980
when the capabilities of a single core basically are no longer increasing,
当单个核心的能力基本上不再增加时，

631
00:38:55,050 --> 00:39:00,040
the demands of the new applications are increasing faster than ever.
新应用的需求增长速度比以往任何时候都要快。

632
00:39:04,130 --> 00:39:04,760
Here,
在这里，

633
00:39:06,020 --> 00:39:08,370
it's a plot open.
这是一个情节开放的情节。

634
00:39:08,380 --> 00:39:08,930
I plot.
我绘图。

635
00:39:08,940 --> 00:39:10,770
Many of you may have seen it.
你们中的许多人可能已经看过了。

636
00:39:11,730 --> 00:39:20,320
And it shows Compute cup requirements to train the state of the art models.
它展示了训练最先进模型所需的计算资源要求。

637
00:39:21,390 --> 00:39:25,700
This is plot was going back to 2012 was published in 2019.
这个情节是回溯到2012年，于2019年出版。

638
00:39:27,360 --> 00:39:29,100
Again, it's a lot of scale.
再次强调，这是一个很大的规模。

639
00:39:29,860 --> 00:39:31,090
If you look here,
如果你看这里，

640
00:39:31,960 --> 00:39:35,280
this growth is absolutely astounding.
这种增长绝对令人震惊。

641
00:39:36,860 --> 00:39:37,970
The requirements,
要求，

642
00:39:38,320 --> 00:39:44,640
computer requirements grew 35 times every 18 months.
计算机需求每18个月增长35倍。

643
00:39:48,100 --> 00:39:51,490
I added here another data point for 2020.
我在这里添加了2020年的另一个数据点。

644
00:39:52,220 --> 00:39:53,570
A new model was released.
发布了一个新的型号。

645
00:39:53,580 --> 00:39:55,730
If you remember a little more than 1 year ago,
如果你还记得一年多前的事情，

646
00:39:55,740 --> 00:39:59,130
gpt three from open ai made a lot of waves.
OpenAI的GPT-3引起了很大的轰动。

647
00:40:00,770 --> 00:40:03,340
It has 175,
它有175个。

648
00:40:03,350 --> 00:40:05,920
55 million parameters.
5500万个参数。

649
00:40:07,530 --> 00:40:09,160
And again, it fits a curve.
而且，它适合一条曲线。

650
00:40:09,910 --> 00:40:12,210
This, again, is not only as aesthetic models.
这不仅仅是美学模型。

651
00:40:13,100 --> 00:40:19,390
You have models like with the gpt three is actually language model,
你们有像GPT-3这样的模型，实际上是语言模型。

652
00:40:21,230 --> 00:40:22,060
video model,
视频模型

653
00:40:23,160 --> 00:40:24,230
pattern recognition,
模式识别

654
00:40:24,240 --> 00:40:25,670
and things like that.
等等，诸如此类的东西。

655
00:40:28,170 --> 00:40:29,510
And now here is a morse law.
现在我给你介绍一下摩尔定律。

656
00:40:29,520 --> 00:40:30,910
Actually, it's a morse law.
实际上，这是摩尔定律。

657
00:40:30,920 --> 00:40:32,790
Even forget that it ended,
甚至忘记它已经结束了，

658
00:40:33,130 --> 00:40:34,450
even if it were intended,
即使有意这样做，

659
00:40:35,610 --> 00:40:37,720
a we would be in a big trouble.
如果我们这样做，我们会陷入大麻烦中。

660
00:40:38,020 --> 00:40:39,050
But it ended.
但它结束了。

661
00:40:39,060 --> 00:40:41,090
And this is actually how the morse law looked like.
这实际上就是摩尔定律的样子。

662
00:40:44,820 --> 00:40:46,020
You see, is a gap.
你看，这是一个间隙。

663
00:40:46,030 --> 00:40:47,770
This is huge, and this is explanation.
这是巨大的，这是解释。

664
00:40:47,780 --> 00:40:50,770
It's, again, the law a you have a log scale here.
这里使用了对数刻度，这是法律要求的。

665
00:40:52,030 --> 00:40:57,590
And the gap increases exponentially every year or every day if you want.
而且这个差距每年或每天都在呈指数增长。

666
00:41:01,900 --> 00:41:03,210
So now what do you do about it?
那么现在你打算怎么办呢？

667
00:41:04,400 --> 00:41:04,750
Right?
对吗？

668
00:41:06,720 --> 00:41:10,150
You heard about specialized processors.
你听说过专用处理器吗？

669
00:41:11,020 --> 00:41:15,540
You have gp us like and media,
你有GPUS、喜欢和媒体。

670
00:41:15,550 --> 00:41:25,390
gpsa 100 is the latest on dp us from ten several processor units from google,
gpsa 100是谷歌最新的处理器单元之一，具有十个处理器单元。

671
00:41:26,820 --> 00:41:27,660
sarah brass.
莎拉·布拉斯。

672
00:41:27,670 --> 00:41:31,040
This is a company building huge chips,
这是一家制造巨大芯片的公司。

673
00:41:31,710 --> 00:41:32,510
very powerful.
非常强大。

674
00:41:33,600 --> 00:41:38,680
And any of everyone else builds their own version of gpu intel alchemist,
而其他每个人都可以构建自己的版本的英特尔Alchemist GPU。

675
00:41:39,840 --> 00:41:40,840
your announcement,
你的公告，

676
00:41:41,700 --> 00:41:44,020
md radium, and so forth.
镭，等等。

677
00:41:46,110 --> 00:41:47,580
The main idea here,
这里的主要思想是

678
00:41:48,960 --> 00:41:49,480
obviously,
显然，

679
00:41:49,490 --> 00:41:54,500
we specialize harder is that you are going to narrow the workloads you
我们更专注的意思是你将要缩小工作负载范围

680
00:41:54,510 --> 00:41:55,380
want to support,
想要提供支持，

681
00:41:56,920 --> 00:41:57,950
because of that,
因此，

682
00:41:58,240 --> 00:41:59,630
more about that workload.
关于那个工作负载的更多信息。

683
00:41:59,640 --> 00:42:02,540
So you can do more optimization,
所以你可以进行更多的优化。

684
00:42:02,550 --> 00:42:05,870
and you can be smarter in the way you design the chip.
而且你可以在设计芯片的方式上更聪明一些。

685
00:42:07,570 --> 00:42:09,830
You increase the parallelism and things like that.
你增加并行性和类似的东西。

686
00:42:10,530 --> 00:42:15,860
So you can make it much faster for that workload than a general purpose processor,
因此，对于该工作负载，您可以比通用处理器更快地完成任务。

687
00:42:17,460 --> 00:42:17,720
right?
对的？

688
00:42:19,710 --> 00:42:21,940
But now you need to program these things as well.
但是现在你也需要编写这些程序。

689
00:42:22,340 --> 00:42:23,980
You may need to share these things as well.
你可能还需要分享这些东西。

690
00:42:24,720 --> 00:42:25,110
Right?
对吗？

691
00:42:25,390 --> 00:42:28,140
And they are going to be quite different from the cp us.
它们将与计算机处理器相当不同。

692
00:42:29,190 --> 00:42:30,580
And who has to deal with that.
那要由谁来处理呢？

693
00:42:31,600 --> 00:42:33,030
As big as stand,
就像一个巨大的展台一样，

694
00:42:33,120 --> 00:42:35,390
your operating system has to be with it.
你的操作系统必须与之兼容。

695
00:42:40,770 --> 00:42:44,490
Now, the problem is that even with this specialized hardware,
现在的问题是，即使有这种专门的硬件，

696
00:42:47,130 --> 00:42:47,810
they help,
它们有帮助。

697
00:42:48,550 --> 00:42:52,010
obviously, there are more powerful than a single call,
显然，有更强大的功能超过单个调用。

698
00:42:54,720 --> 00:42:55,200
but still,
但是，

699
00:42:58,020 --> 00:42:59,690
they don't close the gap.
他们没有填补这个差距。

700
00:43:01,100 --> 00:43:01,490
Here,
在这里，

701
00:43:01,500 --> 00:43:10,890
it's the performance of the gp os and of the tp os on the same on the same block.
这是关于GP操作系统和TP操作系统在相同块上的性能表现。

702
00:43:13,140 --> 00:43:16,080
And there is a start here, basically same.
这里也有一个开始，基本上是一样的。

703
00:43:16,090 --> 00:43:22,290
We are assuming in order to make sense and to normalize.
我们假设是为了理解和规范化。

704
00:43:23,390 --> 00:43:25,310
Typically, aspect,
通常，方面，

705
00:43:25,400 --> 00:43:28,470
in particular, based on open ai data,
特别是基于OpenAI的数据，

706
00:43:30,160 --> 00:43:32,790
the utilization of the hardware by this,
这个的硬件利用率

707
00:43:33,120 --> 00:43:36,270
the state of the art training algorithms is like 33%.
最先进的训练算法的准确率大约为33%。

708
00:43:37,750 --> 00:43:41,020
When I show the performance of the gp us and dp us here,
在这里展示GPU和CPU的性能时，

709
00:43:41,030 --> 00:43:42,980
I am factoring it for that utilization.
我正在为其利用率进行因式分解。

710
00:43:48,170 --> 00:43:50,330
So that's huge problem, right?
那是一个很大的问题，对吗？

711
00:43:51,950 --> 00:43:53,630
Even with the cp us and gp us,
即使有中央处理器和图形处理器，

712
00:43:53,640 --> 00:43:57,450
and is a memory demands are growing as fast, even faster.
随着时间的推移，内存需求正在迅速增长，甚至更快。

713
00:43:58,670 --> 00:43:59,100
Here,
在这里，

714
00:44:01,310 --> 00:44:04,550
it's a log scale is a number of parameters of these models.
这是一个对这些模型参数的对数刻度。

715
00:44:06,420 --> 00:44:08,690
This is from 2016.
这是来自2016年的信息。

716
00:44:10,280 --> 00:44:14,490
And now the last.is,
现在是最后一个了。

717
00:44:16,180 --> 00:44:17,850
this is from china.
这是来自中国的消息。

718
00:44:18,950 --> 00:44:26,370
And this is1.70 55 trillion parameters.
这是1.70 55万亿个参数。

719
00:44:26,380 --> 00:44:29,700
So it's 10 times larger than gpt three.
所以它比GPT-3大10倍。

720
00:44:31,290 --> 00:44:33,840
I'm sure you are going to hear about other announcement,
我相信你很快就会听到其他的公告。

721
00:44:33,850 --> 00:44:35,040
even bigger models.
更大的模型。

722
00:44:36,090 --> 00:44:39,040
If you plot and if you look at this data, it's again itself, again,
如果你绘制并查看这些数据，你会发现它再次是自身。

723
00:44:39,050 --> 00:44:39,720
lock scale.
锁定比例尺。

724
00:44:40,440 --> 00:44:41,740
Although it may not look like,
尽管它可能看起来不像，

725
00:44:43,560 --> 00:44:44,720
since 2016,
自2016年以来，

726
00:44:44,730 --> 00:44:47,160
the size of this model increased 40 times,
这个模型的大小增加了40倍。

727
00:44:47,170 --> 00:44:48,240
every 18 months.
每18个月。

728
00:44:48,250 --> 00:44:51,470
And if you look at the last 3 years,
如果你看过去的三年，

729
00:44:51,960 --> 00:44:53,080
300, 40 times.
300，40次。

730
00:44:54,370 --> 00:44:54,570
Right?
对吗？

731
00:44:54,580 --> 00:44:57,460
This is phenomenal.
这太棒了。

732
00:44:58,830 --> 00:44:59,790
During this time,
在这段时间内，

733
00:45:00,630 --> 00:45:01,740
the gpu memory,
GPU内存

734
00:45:03,320 --> 00:45:05,230
1.7 x every 18 months.
每18个月增长1.7倍。

735
00:45:06,640 --> 00:45:08,980
It used to be not a few years back.
几年前还不是这样的。

736
00:45:09,750 --> 00:45:10,120
Right?
对吗？

737
00:45:11,130 --> 00:45:13,200
In 2017, eighteen,
2017年，十八岁

738
00:45:14,050 --> 00:45:20,040
you can feed the largest models on a single gpu now,
现在你可以在单个GPU上运行最大的模型了。

739
00:45:20,730 --> 00:45:24,610
you need more than 1,000 gp us to just to store the parameters
你需要超过1,000美元的GP来仅仅存储这些参数。

740
00:45:24,620 --> 00:45:25,650
of the largest models.
最大的模型之一。

741
00:45:31,740 --> 00:45:33,650
So let's see,
那么让我们来看一下，

742
00:45:34,380 --> 00:45:35,490
what are the other trends?
其他趋势有哪些？

743
00:45:37,220 --> 00:45:38,760
Now let's move to storage capacity.
现在让我们来讨论存储容量。

744
00:45:38,770 --> 00:45:41,840
Storage capacity is still growing exponentially.
存储容量仍在呈指数增长。

745
00:45:46,380 --> 00:45:47,440
The one thing here,
这里的一件事，

746
00:45:47,450 --> 00:45:54,290
it used to be dominating the storage by harvest drives no longer.
它曾经通过收割驱动器来主导存储，但现在不再如此。

747
00:45:54,300 --> 00:45:58,060
Now you have more and more solid state devices.
现在你拥有越来越多的固态设备。

748
00:46:00,350 --> 00:46:02,780
You can see here, the capacity of a solid,
你可以在这里看到，固体的容量

749
00:46:03,950 --> 00:46:11,830
a a solid state drive started to exceed in 2015, 16.
2015年和2016年开始，固态硬盘开始大幅增长。

750
00:46:12,220 --> 00:46:19,820
That of the so the biggest ssd drive exceeded the capacity of the biggest
最大的SSD驱动器的容量超过了最大容量。

751
00:46:20,220 --> 00:46:24,030
harvest drive around to fifteen to 6 to 16.
将收获车开到15号，然后到6号，最后到16号。

752
00:46:24,320 --> 00:46:29,740
And today, if you are looking the largest ssd3.5 inch drive,
今天，如果你正在寻找最大的3.5英寸SSD驱动器，

753
00:46:29,970 --> 00:46:31,660
it's 100 terabytes.
这是100太字节。

754
00:46:32,500 --> 00:46:35,350
The largest ssd is 18 terabytes.
最大的固态硬盘容量为18TB。

755
00:46:36,360 --> 00:46:36,830
Now,
现在，

756
00:46:38,130 --> 00:46:42,450
you are going to pay dearly for this 100 terabyte ssd drive.
你将为这个100TB固态硬盘付出巨大代价。

757
00:46:42,830 --> 00:46:47,230
It costs 40 k is 400 per terabytes.
每个 terabyte 的成本是 40k，即每个 terabyte 的成本是 400。

758
00:46:48,650 --> 00:46:50,600
While to get 18 terabytes, they say,
他们说，要获得18TB的存储空间，

759
00:46:50,930 --> 00:46:52,560
sorry, this is hardest drive.
抱歉，这是最困难的驱动器。

760
00:46:53,820 --> 00:46:55,920
I'm going to just correct this one.
我只需要纠正这一个。

761
00:47:03,370 --> 00:47:05,880
For that, you pay only $600,
对此，您只需支付600美元。

762
00:47:05,890 --> 00:47:08,750
a 33 dull pet terabytes.
一个33寸的无聊宠物硬盘。

763
00:47:11,040 --> 00:47:11,500
Now,
现在，

764
00:47:11,810 --> 00:47:17,900
you can have more economical or economical choices when you look at the ss ds,
当您查看SS DS时，您可以有更经济或经济的选择。

765
00:47:17,910 --> 00:47:18,540
like, for instance,
例如，比如说，

766
00:47:18,550 --> 00:47:23,590
if you under four terabytes ssd it costs $95 better up.
如果你购买四TB的固态硬盘，价格为95美元，建议你升级。

767
00:47:23,600 --> 00:47:26,790
Terabyte still more expensive than the harvest stripes.
1TB的存储容量仍然比收获条纹更昂贵。

768
00:47:27,430 --> 00:47:28,470
Despite of this,
尽管如此，

769
00:47:29,040 --> 00:47:32,000
the ss ds are winning the war.
SS和DS正在赢得战争。

770
00:47:32,010 --> 00:47:33,560
There is little question about that.
这一点几乎没有疑问。

771
00:47:34,580 --> 00:47:35,170
Why?
为了帮助更多的学生理解和学习计算机操作系统课程，我将英文内容翻译成中文。这样可以让更多的学生受益并提高他们的学习效果。

772
00:47:35,180 --> 00:47:38,250
Because the hardest drive are cheaper,
因为硬盘更便宜。

773
00:47:38,640 --> 00:47:39,890
but they are much slower.
但它们速度要慢得多。

774
00:47:39,900 --> 00:47:44,590
Sometimes between ten x and 100 x consumes much more power,
有时候在10倍和100倍之间的消耗更多电力。

775
00:47:45,050 --> 00:47:49,870
very important for data center and mobile devices or laptops.
对于数据中心和移动设备或笔记本电脑来说非常重要。

776
00:47:50,350 --> 00:47:51,940
And they are less reliable.
而且它们不太可靠。

777
00:47:54,360 --> 00:47:58,810
These are some projections to make to drive home that point
以下是一些投影片，用于强调这一点

778
00:47:58,820 --> 00:48:00,010
on the left hand side.
在左手边。

779
00:48:00,800 --> 00:48:09,640
It's about, you can see different technologies is projected up to 2030.
这是关于到2030年不同技术的展望。

780
00:48:11,070 --> 00:48:17,780
You can have here with dark blue is ss ds with light blue.
你可以将这里的深蓝色换成浅蓝色。

781
00:48:17,790 --> 00:48:18,860
It's a flash.
这是一个闪存。

782
00:48:18,870 --> 00:48:24,530
So this is usb the storage in your camera and things like that.
这是用于相机等设备的USB存储设备。

783
00:48:25,240 --> 00:48:28,490
And then the yellow is actually our tapes.
然后黄色实际上是我们的磁带。

784
00:48:28,870 --> 00:48:29,920
So all the technology,
所以所有的技术，

785
00:48:29,930 --> 00:48:31,880
probably many of you have never seen a tape,
可能你们中的许多人从未见过磁带，

786
00:48:32,710 --> 00:48:33,900
but they are very cheap.
但它们非常便宜。

787
00:48:33,910 --> 00:48:34,500
That's why.
这就是为什么。

788
00:48:35,100 --> 00:48:40,700
And then o is dark orange or with orange is actually harvest lives.
然后o是深橙色或者橙色，实际上是收获的象征。

789
00:48:41,370 --> 00:48:50,720
Also, the same study anticipate that in 2026, actually,
同样的研究预测，实际上在2026年，

790
00:48:51,000 --> 00:48:55,000
the ss ds will be cheaper per terabytes and hardest drives.
SSD和硬盘的价格将会更便宜，每个TB的存储容量也会更大。

791
00:48:56,050 --> 00:48:59,000
And that's why probably you are going to see on the left hand side,
这就是为什么你可能会在左手边看到的原因。

792
00:49:00,360 --> 00:49:08,220
a point in around 2025 after which the market share of and
在2025年左右的一个时间点之后，市场份额将开始下降

793
00:49:09,170 --> 00:49:12,360
not only of the harvest drive is going to decrease.
不仅收成将会减少。

794
00:49:15,850 --> 00:49:19,360
Networking still going very fast.
网络仍然非常快速。

795
00:49:19,860 --> 00:49:27,710
Today you can have 100 garbage connections to your machines in aws next
今天你可以在AWS上拥有100个垃圾连接到你的机器上。

796
00:49:27,720 --> 00:49:29,710
will be probably 400 garbage per second.
每秒可能会产生大约400个垃圾。

797
00:49:31,460 --> 00:49:33,300
There are other factors, right?
还有其他因素，对吗？

798
00:49:33,310 --> 00:49:34,040
It's like,
就像是，

799
00:49:35,520 --> 00:49:36,300
for instance,
例如，

800
00:49:38,360 --> 00:49:47,670
another important aspect is the fact that it used to be early on.
另一个重要的方面是它曾经是早期的。

801
00:49:48,270 --> 00:49:54,100
You have very, few huge computer computers.
你们有非常少的大型计算机。

802
00:49:54,590 --> 00:49:55,780
They are extremely expensive,
它们非常昂贵。

803
00:49:55,790 --> 00:49:57,260
tens of millions of dollars.
数千万美元。

804
00:49:58,750 --> 00:50:03,720
In that case, you have a lot of people using the same machine.
在这种情况下，你有很多人使用同一台机器。

805
00:50:04,680 --> 00:50:05,080
Right?
对吗？

806
00:50:05,670 --> 00:50:08,540
Actually, in 60s, if I remember correct or 50s,
实际上，在60年代，如果我记得正确的话，或者是50年代，

807
00:50:09,350 --> 00:50:17,290
when ibm started the to to build computers,
当IBM开始建造计算机时，

808
00:50:20,840 --> 00:50:21,430
watson,
是的，有什么我可以帮助您的吗？

809
00:50:22,160 --> 00:50:26,990
who was the founder of the ibm and the ceo was saying that he
IBM的创始人是谁？CEO曾经说过什么？

810
00:50:27,000 --> 00:50:29,090
doesn't believe that there is a need,
不相信有这个必要

811
00:50:29,100 --> 00:50:33,690
then for more than five or six computers in the entire united states.
那么在整个美国境内超过五六台计算机的情况下。

812
00:50:36,240 --> 00:50:37,750
Of course, over time,
当然，随着时间的推移，

813
00:50:39,190 --> 00:50:42,430
the computers have proliferated becomes smaller and smaller.
计算机的数量越来越多，而且体积也越来越小。

814
00:50:43,850 --> 00:50:46,600
It used to be probably in 2000s.
这可能是在2000年代的时候。

815
00:50:46,610 --> 00:50:49,440
At the end of the previous century,
在上个世纪末，

816
00:50:50,150 --> 00:50:52,810
you have one user, one computer.
你有一个用户，一个计算机。

817
00:50:53,430 --> 00:50:56,060
And now you have a user.
现在你有一个用户了。

818
00:50:56,520 --> 00:51:00,800
One user is many computers, right?
一个用户可以使用多台计算机，对吗？

819
00:51:01,220 --> 00:51:02,440
If you're in your car alone,
如果你独自一人在车里，

820
00:51:02,450 --> 00:51:04,940
you have ten and send ten of cp us.
你有十个并发送十个CP给我们。

821
00:51:05,770 --> 00:51:06,070
Right?
对吗？

822
00:51:06,920 --> 00:51:08,210
So this change,
所以这个改变，

823
00:51:08,220 --> 00:51:09,660
and as you can imagine,
正如你可以想象的那样，

824
00:51:09,670 --> 00:51:15,250
this also is going to impact the way you are going to design the operating system.
这也将影响你将要设计操作系统的方式。

825
00:51:18,090 --> 00:51:19,530
There is another aspect here.
这里还有另一个方面。

826
00:51:19,540 --> 00:51:26,870
There is an extreme range of time scales.
时间尺度有非常广泛的范围。

827
00:51:28,200 --> 00:51:31,170
This is from jeff dean of google,
这是来自谷歌的Jeff Dean的消息。

828
00:51:32,310 --> 00:51:34,990
very influential computer scientist,
非常有影响力的计算机科学家

829
00:51:35,280 --> 00:51:37,540
build many of the distributed systems there.
在那里构建许多分布式系统。

830
00:51:40,360 --> 00:51:45,440
If you look about from an application and the operating system,
如果你从应用程序和操作系统的角度来看，

831
00:51:46,770 --> 00:51:50,640
you have to deal with a latency as low as lower than normal.
你需要处理一个比正常情况下更低的延迟。

832
00:51:51,380 --> 00:51:54,240
No, second, this is l one cash, this is a cash,
不，第二个是l一个现金，这是一个现金。

833
00:51:54,250 --> 00:51:58,760
which is the first level cash which is on chip.
第一级缓存是嵌入芯片中的缓存。

834
00:52:01,350 --> 00:52:02,420
All the way.
一路走来。

835
00:52:02,430 --> 00:52:07,220
If you are going to send a packet to communicate with someone in california
如果你要发送一个数据包与加利福尼亚的某人进行通信

836
00:52:07,230 --> 00:52:08,180
to netherlands,
到荷兰

837
00:52:09,360 --> 00:52:09,790
what?
什么？

838
00:52:09,800 --> 00:52:13,030
It's 150 million seconds.
这是1.5亿秒。

839
00:52:14,350 --> 00:52:16,830
So you need to handle a scale,
所以你需要处理一个称重器，

840
00:52:17,550 --> 00:52:18,750
a difference in scale,
规模上的差异

841
00:52:18,760 --> 00:52:22,230
in the range of what?
在什么范围内？

842
00:52:23,540 --> 00:52:25,100
Eight order of magnitude more.
比原来多了八个数量级。

843
00:52:32,880 --> 00:52:33,830
Basically,
基本上，

844
00:52:34,400 --> 00:52:37,110
let me actually stop here and see what are the questions.
让我停下来看看有哪些问题。

845
00:52:49,950 --> 00:52:51,230
Why does industry intel,
为什么工业情报

846
00:52:51,240 --> 00:52:53,960
apple say the onslaught is not over?
苹果表示袭击尚未结束。

847
00:53:02,860 --> 00:53:07,610
So the morse law from that very definition of the morse law,
因此，根据莫尔定律的定义，

848
00:53:08,220 --> 00:53:09,480
it is pretty much over.
基本上已经结束了。

849
00:53:10,520 --> 00:53:11,280
It's physical,
这是物理的。

850
00:53:11,840 --> 00:53:12,270
right?
对的？

851
00:53:13,390 --> 00:53:18,380
What they say is that what this company say,
他们所说的是这家公司所说的。

852
00:53:20,000 --> 00:53:21,190
it's fundamentally look,
它基本上看起来是这样的

853
00:53:24,490 --> 00:53:25,520
if the morse law,
如果摩尔定律，

854
00:53:26,330 --> 00:53:29,840
if you say that the morse law is over and i'm building chips,
如果你说摩尔定律已经结束，而我正在制造芯片，

855
00:53:29,850 --> 00:53:30,600
why would you build?
为什么要构建？

856
00:53:30,610 --> 00:53:31,960
Why would you buy chips from me?
为什么你会从我这里购买芯片呢？

857
00:53:32,730 --> 00:53:35,600
Because this means that the new chips will be the same like the old chips.
这意味着新芯片将与旧芯片相同。

858
00:53:37,060 --> 00:53:37,960
No more power, right?
没有电了，对吗？

859
00:53:40,160 --> 00:53:41,910
So there is a little bit also of,
所以还有一点点的，

860
00:53:43,310 --> 00:53:43,910
they said,
他们说，

861
00:53:45,220 --> 00:53:46,850
I cannot say that the morse law is,
我不能说摩尔定律是什么。

862
00:53:47,540 --> 00:53:48,330
it's over,
结束了，

863
00:53:48,740 --> 00:53:52,980
because the morse law is what the public associated with the performance.
因为摩尔定律是公众所关联的性能标志。

864
00:53:53,470 --> 00:53:53,780
Right?
对吗？

865
00:53:55,190 --> 00:53:58,450
So it's a little bit of also marketing.
所以这也有一点点营销的成分。

866
00:53:59,110 --> 00:54:00,500
The more slow is over,
越慢就结束了

867
00:54:00,510 --> 00:54:04,100
but the more slow it has a very precise definition.
但是"越慢"有一个非常精确的定义。

868
00:54:05,300 --> 00:54:07,920
And these companies they talk to the public.
这些公司与公众进行交流。

869
00:54:08,380 --> 00:54:11,100
And the public doesn't know the precise definition.
而且公众并不知道确切的定义。

870
00:54:11,110 --> 00:54:13,660
Now, a small, slow means it means fast.
现在，一个小而慢的方式意味着快速。

871
00:54:14,070 --> 00:54:15,540
Things become faster and faster.
事物变得越来越快。

872
00:54:16,790 --> 00:54:19,810
Now, in truth, they use a lot of other techniques.
现在，实际上，他们使用了许多其他技术。

873
00:54:21,350 --> 00:54:25,590
And we are going to talk about those in order to improve the performance.
我们将讨论这些问题以提高性能。

874
00:54:26,850 --> 00:54:27,210
Right?
对吗？

875
00:54:28,070 --> 00:54:32,580
And this is very visible in your iphone or in your android phone.
这在你的iPhone或Android手机上非常明显。

876
00:54:33,650 --> 00:54:35,770
We'll talk a little bit about how they do it,
我们将稍微谈一下他们是如何做到的。

877
00:54:36,510 --> 00:54:39,140
but that is not by improving necessary.
但这并不是通过改进所必需的。

878
00:54:39,150 --> 00:54:45,100
The performance of a single core is by adding gp us,
单个核心的性能是通过添加GPU来提升的。

879
00:54:45,750 --> 00:54:47,340
neural engines,
神经引擎

880
00:54:48,250 --> 00:54:50,400
adding more course,
添加更多的课程

881
00:54:51,110 --> 00:54:51,730
things like that.
诸如此类的事情。

882
00:54:53,970 --> 00:54:54,920
We'll talk more about it.
我们会进一步讨论这个问题。

883
00:54:56,160 --> 00:54:57,030
But good question.
但是好问题。

884
00:54:58,280 --> 00:55:03,430
There are programs like spark and made videos that allow us to use
有一些像Spark和Made Videos这样的程序，可以让我们使用。

885
00:55:03,440 --> 00:55:06,390
networks or computers to process a parallel workload.
网络或计算机用于处理并行工作负载。

886
00:55:06,400 --> 00:55:09,630
But would it be feasible to create some type of operating system
但是创建某种类型的操作系统是否可行呢？

887
00:55:09,640 --> 00:55:14,100
of software that could string together resources of multiple
能够将多个资源组合起来的软件。

888
00:55:14,110 --> 00:55:16,500
computers for personal consumer use?
个人消费者使用的计算机？

889
00:55:17,310 --> 00:55:21,100
I think
我认为

890
00:55:25,350 --> 00:55:27,900
the question is it's a distributed operating system.
这是一个分布式操作系统。

891
00:55:29,140 --> 00:55:32,890
I think that there is not a coherent operating system,
我认为目前还没有一个完整的操作系统。

892
00:55:32,900 --> 00:55:36,910
but the elements of a operating system dispute operating system
但是操作系统的要素与操作系统之间存在争议。

893
00:55:36,920 --> 00:55:38,270
are already there.
已经在那里了。

894
00:55:39,670 --> 00:55:45,520
Because one thing can you probably know about cuba net is cabernet is
因为有一件事你可能知道关于古巴网络，那就是卡贝尔纳特（Cabernet）是其中之一。

895
00:55:45,530 --> 00:55:47,720
provides resource orchestration,
提供资源编排功能，

896
00:55:47,730 --> 00:55:52,970
resource management over multiple machines, over a cluster.
在集群中跨多台机器进行资源管理。

897
00:55:53,870 --> 00:55:54,500
That's one.
这是一个。

898
00:55:55,590 --> 00:55:58,370
The now that then you have distributed file systems,
现在，你已经拥有分布式文件系统了。

899
00:55:59,780 --> 00:56:00,010
right?
对的？

900
00:56:00,020 --> 00:56:02,890
Like hdfs or you have these blob stores like,
像HDFS这样的分布式文件系统，或者你有类似的Blob存储。

901
00:56:03,470 --> 00:56:05,390
i'm as I double ss three.
我是I double ss three。

902
00:56:06,370 --> 00:56:09,160
We'll talk more to towards the end of the class.
我们会在课程结束前更多地交流。

903
00:56:09,670 --> 00:56:10,800
It's a good question.
这是一个很好的问题。

904
00:56:13,450 --> 00:56:15,540
Probably you should expect that at some point,
也许你应该预计在某个时候，

905
00:56:15,910 --> 00:56:19,130
you are going to see this kind of pieces coming
你将会看到这样的作品出现。

906
00:56:19,140 --> 00:56:22,540
together in a more coherent way in what you could call
以一种更连贯的方式共同合作，你可以称之为

907
00:56:22,550 --> 00:56:23,780
a distributed operating system.
一个分布式操作系统。

908
00:56:29,420 --> 00:56:31,100
So fundamentally,
因此，从根本上说，

909
00:56:36,000 --> 00:56:36,550
it's again.
又是你。

910
00:56:36,560 --> 00:56:39,970
So why things are exciting?
为什么事情会令人兴奋呢？

911
00:56:40,330 --> 00:56:41,380
Because they are challenging.
因为它们具有挑战性。

912
00:56:42,190 --> 00:56:43,610
Why are things challenging?
为什么事情会具有挑战性？

913
00:56:44,000 --> 00:56:45,460
Because they are complex.
因为它们很复杂。

914
00:56:46,090 --> 00:56:47,610
And this complexity,
而且这种复杂性，

915
00:56:47,830 --> 00:56:49,670
it's growing fast.
它正在快速增长。

916
00:56:50,540 --> 00:56:52,120
Why is complexity growing?
为什么复杂性在增加？

917
00:56:52,500 --> 00:56:55,530
Because you have the demands of the new application
因为你有新应用的需求

918
00:56:55,540 --> 00:56:57,090
are growing faster than ever.
正在以前所未有的速度增长。

919
00:56:57,510 --> 00:57:02,310
Capabilities of us of the harder are no longer growing like they used to be.
我们对硬件的使用能力不再像过去那样增长。

920
00:57:03,030 --> 00:57:08,010
So then you need to add to innovate on the architecture.
那么你需要在架构上进行创新。

921
00:57:08,020 --> 00:57:09,810
You have different specialized chips.
你有不同的专用芯片。

922
00:57:10,300 --> 00:57:12,100
You need to distribute these applications.
你需要分发这些应用程序。

923
00:57:13,220 --> 00:57:16,130
You need to parallelize the programs and many more.
你需要将程序并行化，还有许多其他任务。

924
00:57:20,780 --> 00:57:22,230
And i'll talk a little more about it.
我会再多谈一些关于它的内容。

925
00:57:27,190 --> 00:57:29,870
And then the applications themselves are more complicated.
而且应用程序本身更加复杂。

926
00:57:30,810 --> 00:57:33,940
The application goes to have a variety of software modules.
该应用程序将具有多种软件模块。

927
00:57:34,500 --> 00:57:35,740
And we'll talk more about that.
我们将会更详细地讨论这个问题。

928
00:57:35,750 --> 00:57:36,660
But remember,
但请记住，

929
00:57:37,320 --> 00:57:41,690
if you have almost every application you are using today is not running
如果你使用的几乎每个应用程序都无法运行

930
00:57:41,700 --> 00:57:42,890
on only on your machine,
仅限于您的机器上，

931
00:57:42,900 --> 00:57:46,170
it has a back and use facebook.
它有一个背面并且使用Facebook。

932
00:57:47,090 --> 00:57:49,360
A lot of things happen in the back and use google
很多事情都是在后台发生的，使用谷歌。

933
00:57:50,210 --> 00:57:55,140
or any other google applications and80% is into the backup.
或任何其他谷歌应用程序，其中80%用于备份。

934
00:57:56,440 --> 00:57:59,710
Do it at everything almost right net flicks name it.
几乎所有的事情都可以在网飞上找到，名字就叫它。

935
00:58:00,190 --> 00:58:00,510
Right?
对吗？

936
00:58:03,270 --> 00:58:06,340
And then it has to run a different heart of architectures.
然后它必须运行不同的体系结构。

937
00:58:06,350 --> 00:58:08,920
And because of the more slow has ended,
由于速度较慢，已经结束了。

938
00:58:08,930 --> 00:58:11,400
you are going to have or to see a proliferation.
你将会经历或见证一场激增。

939
00:58:11,410 --> 00:58:14,160
You are already seeing a proliferation of hardware architectures.
你已经看到了硬件架构的大量增加。

940
00:58:15,640 --> 00:58:17,470
Just to give you an example here,
只是为了给你举个例子，

941
00:58:17,480 --> 00:58:23,410
and it's a personal example when he started spark and he started in 2009.
这是一个个人的例子，他在2009年开始使用Spark。

942
00:58:23,900 --> 00:58:25,820
So what 12 years ago,
那么，12年前发生了什么？

943
00:58:26,250 --> 00:58:28,640
we are focusing only for processing data,
我们只关注数据处理。

944
00:58:28,650 --> 00:58:30,280
which is in the memory efficiently,
在内存中高效的是哪个？

945
00:58:30,290 --> 00:58:32,760
and we are focusing only on cp us.
我们只关注中央处理器（CPU）。

946
00:58:33,650 --> 00:58:33,700
Right?
对吗？

947
00:58:33,710 --> 00:58:37,990
It's like we assume that the processing is done by the general purpose,
这就好像我们假设处理是由通用目的的设备完成的。

948
00:58:38,800 --> 00:58:45,250
proposed processors that I end up when he started ray,
当他开始使用光线追踪时，我提议使用的处理器是

949
00:58:45,260 --> 00:58:48,950
which was that was happening like in 2016.
这是发生在2016年的事情。

950
00:58:48,960 --> 00:58:51,910
So it's after only67 years,
所以只过了67年，

951
00:58:53,470 --> 00:58:58,080
we already have to take into account and to design it
我们已经必须考虑并设计它。

952
00:58:58,620 --> 00:59:02,430
for heterogeneous harder to handle gp us at that time.
在那个时候，对于异构的GPU来说更难处理。

953
00:59:03,280 --> 00:59:06,190
Now, to handle gp us and so forth, this is real.
现在，处理图形处理器等等，这是真实的。

954
00:59:07,140 --> 00:59:09,230
Obviously, this comes with additional complexity.
显然，这会带来额外的复杂性。

955
00:59:12,430 --> 00:59:13,900
It's once you are over the network,
一旦你连接到网络上，

956
00:59:13,910 --> 00:59:15,380
you are also exposed to attacks.
你也会受到攻击的威胁。

957
00:59:17,930 --> 00:59:24,200
And this means that because heterogeneity is increasing dramatically,
这意味着由于异质性急剧增加，

958
00:59:26,170 --> 00:59:28,970
that the operating system becomes even more important,
操作系统变得更加重要，

959
00:59:28,980 --> 00:59:31,650
because it's much harder to extract them away.
因为将它们分离出来要困难得多。

960
00:59:33,040 --> 00:59:33,460
Right?
对吗？

961
00:59:34,670 --> 00:59:36,220
Because if you don't ask like the way,
因为如果你不以这种方式提问，

962
00:59:36,230 --> 00:59:37,860
it's very hard to write applications,
编写应用程序非常困难，

963
00:59:37,870 --> 00:59:41,820
and the operating system is one of the key roles, like we discussed,
操作系统是其中一个关键角色，正如我们所讨论的那样，

964
00:59:41,830 --> 00:59:44,520
is to make that writing developing application very easy.
是使编写开发应用程序变得非常简单。

965
00:59:46,550 --> 00:59:46,890
Right?
对吗？

966
00:59:49,740 --> 00:59:52,050
That's why it's operating.
这就是为什么它在运行。

967
00:59:52,060 --> 00:59:53,290
Some are more challenging,
有些更具挑战性，

968
00:59:53,300 --> 00:59:54,330
are more needed than ever.
比以往任何时候都更加需要。

969
00:59:56,780 --> 01:00:00,100
Now, we discussed and they only discussed about specialized hardware.
现在，我们讨论了一下，他们只讨论了专用硬件的问题。

970
01:00:00,110 --> 01:00:02,500
I mentioned that it's not only specialized hardware.
我提到了这不仅仅是专门的硬件。

971
01:00:05,160 --> 01:00:10,530
How people try to go around the more slow or kind of so to speak extend
人们如何绕过更慢或者可以说是延长的问题

972
01:00:10,540 --> 01:00:11,730
in terms of performance.
从性能方面来看。

973
01:00:12,090 --> 01:00:13,160
In other ways,
在其他方面，

974
01:00:13,170 --> 01:00:14,640
are having more and more courts,
越来越多的法院。

975
01:00:14,650 --> 01:00:16,680
even for general proposed processors,
即使对于一般提出的处理器来说，

976
01:00:17,920 --> 01:00:22,420
like intelligent five that has a processor is 64 course.
像智能五一样，它具有64位处理器。

977
01:00:24,740 --> 01:00:26,850
I am the epic, the same 64 course,
我是史诗级的，同样是64课程。

978
01:00:26,860 --> 01:00:31,050
although there are rumors that the new version will have 128 course.
尽管有传言称新版本将有128门课程。

979
01:00:32,830 --> 01:00:34,620
If you look at these processors,
如果你看一下这些处理器，

980
01:00:34,630 --> 01:00:37,830
actually they are them complicated.
实际上它们是相当复杂的。

981
01:00:38,660 --> 01:00:38,990
Right?
对吗？

982
01:00:39,000 --> 01:00:40,230
This is how it looks like.
这是它的外观。

983
01:00:41,410 --> 01:00:42,290
You have a bunch,
你有一堆东西。

984
01:00:42,880 --> 01:00:43,740
you have cash,
你有现金。

985
01:00:45,470 --> 01:00:51,440
you have some other components to manage memory.
你还有其他组件来管理内存。

986
01:00:51,900 --> 01:00:58,800
You have other components here down to can also
你还有其他组件在这里，可以继续使用。

987
01:00:58,810 --> 01:01:02,920
control the io input output,
控制输入输出(IO)。

988
01:01:02,930 --> 01:01:05,890
getting the data in and out of the processor.
将数据输入和输出处理器。

989
01:01:06,420 --> 01:01:10,010
And reading from the memory,
从内存中读取数据，

990
01:01:10,020 --> 01:01:12,940
which is not on the cheap, it's off the cheap.
这不是便宜的，而是贵的。

991
01:01:15,320 --> 01:01:17,110
You have also in many systems,
在许多系统中，你也有

992
01:01:17,120 --> 01:01:18,310
you have processor,
你有处理器。

993
01:01:18,880 --> 01:01:20,670
you have some integrated graphics.
你的电脑有一些集成显卡。

994
01:01:22,820 --> 01:01:23,270
Right?
对吗？

995
01:01:23,780 --> 01:01:27,060
This is a trend which come and sorry,
这是一个来了又去的趋势，很抱歉。

996
01:01:27,070 --> 01:01:28,980
if you look under the hood,
如果你仔细观察一下内部结构，

997
01:01:29,980 --> 01:01:30,740
they are connected.
它们已连接。

998
01:01:30,750 --> 01:01:34,860
It's like mini system in miniature.
它就像是一个微型系统。

999
01:01:35,670 --> 01:01:36,150
Right?
对吗？

1000
01:01:36,890 --> 01:01:41,280
In this case, you are going to have this is a corpus or car.
在这种情况下，你将拥有一个语料库或汽车。

1001
01:01:42,010 --> 01:01:46,100
Now you are connected to different airports,
现在你已经连接到不同的机场了，

1002
01:01:47,560 --> 01:01:50,610
memory and many other things.
内存和许多其他东西。

1003
01:01:54,320 --> 01:01:56,160
And this complexity just increasing.
而且这种复杂性还在不断增加。

1004
01:01:56,170 --> 01:01:58,760
So here down is like it's what we are seeing.
下面这里就像是我们所看到的。

1005
01:01:58,770 --> 01:02:00,000
Here is another trend.
这是另一个趋势。

1006
01:02:00,010 --> 01:02:01,690
It's system on a chip,
这是系统级芯片（SoC）。

1007
01:02:02,900 --> 01:02:03,230
right?
对的？

1008
01:02:03,860 --> 01:02:08,420
And when going back to that question and apple say, maybe say is more slow,
当回到那个问题并且苹果说，也许说得更慢一些，

1009
01:02:08,430 --> 01:02:09,180
is not done.
还没有完成。

1010
01:02:09,190 --> 01:02:10,260
This is what they do.
这是他们所做的事情。

1011
01:02:11,910 --> 01:02:14,410
And how they sustain the increasing performance again,
以及他们如何再次提高性能的持续性，

1012
01:02:14,420 --> 01:02:17,380
which is not necessarily later is a morse law,
不一定晚于莫尔斯定律的是什么

1013
01:02:18,630 --> 01:02:22,310
is putting more and more intelligence,
是将越来越多的智能化技术应用于

1014
01:02:22,320 --> 01:02:26,510
more and more functionality on the same chip.
在同一芯片上实现越来越多的功能。

1015
01:02:27,490 --> 01:02:27,890
Right?
对吗？

1016
01:02:28,750 --> 01:02:31,810
Here, I will show you have not only cp us,
在这里，我将向你展示不仅仅是复制我们的能力，

1017
01:02:31,820 --> 01:02:33,730
and the cpu have multiple cores.
而且CPU拥有多个核心。

1018
01:02:36,200 --> 01:02:40,000
I'd be sent or eight between six and ten,
我会在六点到十点之间发送或回复信息。

1019
01:02:40,760 --> 01:02:43,800
but you have gps right?
但是你有GPS吗？

1020
01:02:43,810 --> 01:02:45,240
Integrated on the same chip.
集成在同一芯片上。

1021
01:02:45,760 --> 01:02:46,990
You have a core gp us,
您有一个核心的GPU。

1022
01:02:48,590 --> 01:02:48,840
right?
对的？

1023
01:02:48,850 --> 01:02:49,800
A core cp us.
一个核心的中央处理器。

1024
01:02:49,810 --> 01:02:51,440
And in addition to that,
除此之外，

1025
01:02:51,450 --> 01:02:52,740
you have no oral engine,
你没有口语引擎。

1026
01:02:53,010 --> 01:03:01,220
which is really focused on neural to supporting machine learning workloads,
这个系统真正专注于支持机器学习工作负载的神经网络。

1027
01:03:02,260 --> 01:03:03,900
the newer land or water blocks.
更新的陆地或水域方块。

1028
01:03:04,130 --> 01:03:04,410
Right?
对吗？

1029
01:03:04,740 --> 01:03:07,880
This is the things which are like your fingerprint sensor,
这是类似于指纹传感器的东西。

1030
01:03:08,240 --> 01:03:12,580
or recognizing as your face using your face to unlock the phone.
或者通过识别你的脸来解锁手机。

1031
01:03:13,000 --> 01:03:13,180
Right?
对吗？

1032
01:03:13,190 --> 01:03:13,980
Face recognition.
人脸识别。

1033
01:03:14,710 --> 01:03:15,060
Right?
对吗？

1034
01:03:15,830 --> 01:03:18,380
That's how you are going to get more performance.
这是你如何获得更高性能的方法。

1035
01:03:22,430 --> 01:03:24,380
The code is also very complicated,
代码也非常复杂，

1036
01:03:25,350 --> 01:03:26,820
is growing in complexity.
正在变得越来越复杂。

1037
01:03:26,830 --> 01:03:28,980
And I don't have the numbers more recent numbers,
我没有更近期的数据。

1038
01:03:29,470 --> 01:03:31,180
but here is a vista.
但是这里有一个问题。

1039
01:03:31,190 --> 01:03:36,610
This one15 years ago called it was what?
15年前叫它是什么？

1040
01:03:36,620 --> 01:03:40,780
50 millions code lines of code is huge complexity.
5000万行代码是巨大的复杂性。

1041
01:03:42,370 --> 01:03:44,640
Just to give you a sense of nasa space shuttle,
只是为了让你对NASA的航天飞机有个概念，

1042
01:03:45,980 --> 01:03:47,490
you remember, it was a space shuttle,
你记得，那是一艘航天飞机，

1043
01:03:47,500 --> 01:03:49,170
is no longer in service.
不再提供服务。

1044
01:03:49,740 --> 01:03:50,500
It has what?
它有什么？

1045
01:03:50,880 --> 01:03:54,260
I don't know, one of the millions lines of code is crazy.
我不知道，其中的一行代码是疯狂的。

1046
01:03:57,470 --> 01:03:59,760
And then it's, again, like I mentioned several times,
然后，就像我多次提到的那样，

1047
01:04:00,160 --> 01:04:03,640
you have to scale everyone to,
你需要将每个人的规模缩放到...

1048
01:04:04,850 --> 01:04:08,010
because you can no longer do these workloads on a single noun,
因为你不能再在一个单一的名词上完成这些工作负载了。

1049
01:04:08,230 --> 01:04:09,210
on a single machine.
在一台单机上。

1050
01:04:11,710 --> 01:04:14,460
Like I show you the data for machine learning workloads,
我给你展示机器学习工作负载的数据，

1051
01:04:14,470 --> 01:04:16,500
the same thing is for big data analytics,
同样的情况也适用于大数据分析。

1052
01:04:17,240 --> 01:04:18,380
scientific computing.
科学计算。

1053
01:04:18,710 --> 01:04:22,260
You have so we have several computers which are parallel computers
你好，我们有几台并行计算机。

1054
01:04:22,810 --> 01:04:27,580
or indispensable computer since 80s to support this kind of work.
自80年代以来，计算机已成为支持这种工作的不可或缺的工具。

1055
01:04:28,350 --> 01:04:29,470
And then on top of that,
而且除此之外，

1056
01:04:29,480 --> 01:04:30,590
everything is connected.
一切都相互关联。

1057
01:04:30,830 --> 01:04:31,620
This is the internet.
这是互联网。

1058
01:04:32,130 --> 01:04:35,110
Probably the most and the most impressive artifact.
可能是最令人印象深刻的文物。

1059
01:04:35,530 --> 01:04:36,800
The humans have created.
人类创造了。

1060
01:04:37,240 --> 01:04:37,670
Right?
对吗？

1061
01:04:38,120 --> 01:04:39,590
It links the entire world,
它连接了整个世界，

1062
01:04:40,200 --> 01:04:40,610
right?
对的？

1063
01:04:41,650 --> 01:04:46,300
And is what you have 4.5 billions people connected to the internet.
你说的是全球有45亿人连接到互联网吗？

1064
01:04:46,310 --> 01:04:47,580
This is what this plot shelves.
这是这个图表所展示的内容。

1065
01:04:48,360 --> 01:04:48,690
Right?
对吗？

1066
01:04:49,510 --> 01:04:54,310
And this is what is it happens only25 years.
这只发生了25年。

1067
01:04:54,540 --> 01:04:55,460
It's quite amazing.
这真是太令人惊叹了。

1068
01:04:57,570 --> 01:05:03,880
And then the smartphone shipments exceeded the pc shipments,
然后智能手机的出货量超过了个人电脑的出货量。

1069
01:05:03,890 --> 01:05:07,550
what I think in200011.
200011年我所思考的是什么。

1070
01:05:09,310 --> 01:05:10,230
And today,
今天，

1071
01:05:11,510 --> 01:05:19,030
right today actually turns out that you have close to 4
今天事实上你接近于4

1072
01:05:19,040 --> 01:05:24,430
billion smartphones and 5 point something billions mobile phones.
十亿部智能手机和五十多亿部移动电话。

1073
01:05:25,910 --> 01:05:26,240
Right?
对吗？

1074
01:05:27,540 --> 01:05:29,040
This data is a little bit old.
这些数据有点旧了。

1075
01:05:30,500 --> 01:05:32,650
And all of those all the phones are connected.
所有这些手机都已连接。

1076
01:05:32,660 --> 01:05:33,930
So you have 4 billion,
所以你有40亿。

1077
01:05:33,940 --> 01:05:37,290
this kind of very powerful devices at the end of the day which are connected.
这种非常强大的设备最终都是相互连接的。

1078
01:05:40,440 --> 01:05:41,470
You have everything,
你拥有一切，

1079
01:05:41,480 --> 01:05:42,990
you have a huge range, right?
你有一个很大的范围，对吗？

1080
01:05:43,000 --> 01:05:46,810
You have everything from data centered with hundreds of thousands
你拥有数十万个数据中心的一切

1081
01:05:46,820 --> 01:05:51,230
of computers to sends on others,
将计算机上的信息发送给其他计算机

1082
01:05:52,520 --> 01:05:52,920
right?
对的？

1083
01:05:53,410 --> 01:05:55,770
Which you may not be even able to see these chips,
你可能甚至看不到这些芯片，

1084
01:05:56,780 --> 01:05:57,000
right?
对的？

1085
01:05:57,010 --> 01:05:58,160
And everything in between,
以及中间的一切，

1086
01:05:59,430 --> 01:05:59,700
right?
对的？

1087
01:06:00,330 --> 01:06:01,390
And different or close.
不同或相似。

1088
01:06:02,190 --> 01:06:07,040
And just to drive home the.and i'll here.
为了强调一下，我会在这里。

1089
01:06:07,540 --> 01:06:10,210
So just like I mentioned earlier,
就像我之前提到的那样，

1090
01:06:10,220 --> 01:06:12,930
many of the applications you are using today,
你今天使用的许多应用程序，

1091
01:06:13,680 --> 01:06:14,670
they are distributed,
它们是分布式的。

1092
01:06:15,380 --> 01:06:15,820
right?
对的？

1093
01:06:16,350 --> 01:06:17,820
Facebook, twitter, and so forth.
Facebook、Twitter等等。

1094
01:06:19,030 --> 01:06:21,230
And this is what happens under the hood.
这就是在底层发生的事情。

1095
01:06:22,620 --> 01:06:23,000
Right?
对吗？

1096
01:06:23,650 --> 01:06:25,140
And let's say you do a simple search,
假设你进行了一个简单的搜索，

1097
01:06:26,040 --> 01:06:26,430
right?
对的？

1098
01:06:27,250 --> 01:06:30,140
From your android phone or iphone.
从您的安卓手机或iPhone上。

1099
01:06:30,630 --> 01:06:30,810
Right?
对吗？

1100
01:06:30,820 --> 01:06:31,490
What do you do?
你做什么工作？

1101
01:06:32,620 --> 01:06:33,680
So first of all,
首先，

1102
01:06:33,690 --> 01:06:38,050
you need to figure out were back and were servers you need to connect,
你需要找出我们的后端和服务器需要连接的位置。

1103
01:06:38,930 --> 01:06:41,340
to get to send the request,
发送请求的方法是：

1104
01:06:41,350 --> 01:06:43,710
your search request, to get the answer.
您的搜索请求，以获取答案。

1105
01:06:44,360 --> 01:06:45,610
In order to do that,
为了做到这一点，

1106
01:06:46,070 --> 01:06:47,140
you need to do this.
你需要做这个。

1107
01:06:47,990 --> 01:06:49,900
Dns request, domain, name,
DNS请求，域名，名称

1108
01:06:51,430 --> 01:06:51,860
salaries.
工资。

1109
01:06:53,650 --> 01:06:54,050
Right?
对吗？

1110
01:06:54,060 --> 01:06:57,880
And it's like you need to resolve use this link, right?
是的，你需要使用这个链接来解决问题，对吗？

1111
01:06:57,890 --> 01:07:00,980
It's google dot com to a particular server.
这是将网址"google.com"发送到特定服务器。

1112
01:07:02,990 --> 01:07:06,380
You have an entire domain,
你拥有一个完整的域名，

1113
01:07:07,010 --> 01:07:10,100
dns infrastructure,
DNS基础设施

1114
01:07:10,860 --> 01:07:14,520
which consisting of many servers,
由许多服务器组成的

1115
01:07:16,250 --> 01:07:18,240
they will cooperate to give you an answer,
他们会合作给你一个答案。

1116
01:07:18,250 --> 01:07:20,480
to tell you who you need to connect to,
告诉你需要连接的人

1117
01:07:20,490 --> 01:07:22,000
who you need to send the pakistan.
你需要将资料发送给巴基斯坦。

1118
01:07:23,310 --> 01:07:24,780
Now, when you get that address,
现在，当你获得那个地址时，

1119
01:07:24,790 --> 01:07:26,280
which is an ip address,
哪个是一个IP地址？

1120
01:07:27,220 --> 01:07:29,380
you are going to send it over the internet, right?
你打算通过互联网发送吗？

1121
01:07:29,390 --> 01:07:30,580
Over the internet,
通过互联网

1122
01:07:31,010 --> 01:07:35,590
these packets are going to be rooted by switches, routers, and so forth.
这些数据包将会通过交换机、路由器等设备进行路由。

1123
01:07:36,760 --> 01:07:40,280
And it's going to go based on the ip address,
它将根据IP地址进行操作。

1124
01:07:40,290 --> 01:07:41,680
probably in a data center,
可能在一个数据中心中，

1125
01:07:41,690 --> 01:07:43,640
they are going to learn to a load balancer.
他们将要学习负载均衡器。

1126
01:07:44,660 --> 01:07:47,740
The loud balancer, you get the packets you send to a server,
负载均衡器，你会收到发送给服务器的数据包。

1127
01:07:47,750 --> 01:07:49,020
the web server,
网络服务器，

1128
01:07:49,030 --> 01:07:52,160
probably the web server is going to look at the request.
可能是Web服务器要查看请求。

1129
01:07:52,470 --> 01:07:55,270
And based on the request is going to send
根据请求即将发送的内容

1130
01:07:56,380 --> 01:08:00,210
request an entire other disciplinary systems

1131
01:08:01,490 --> 01:08:03,080
to resolve that request.

1132
01:08:03,810 --> 01:08:03,920
Right?

1133
01:08:03,930 --> 01:08:05,080
To give you the answers.

1134
01:08:05,090 --> 01:08:06,960
If you have a google inquiry,

1135
01:08:07,740 --> 01:08:12,200
obviously, you may also have to get some ads in the result in the process.

1136
01:08:12,920 --> 01:08:15,310
You have another infrastructure doing only that,

1137
01:08:16,470 --> 01:08:18,050
figuring out what as the shelf.

1138
01:08:18,760 --> 01:08:21,830
And then you need to put together the entire page and send it

1139
01:08:21,840 --> 01:08:24,350
back and to be displayed on your computer.

1140
01:08:26,680 --> 01:08:29,110
This is just to give you a sense how complicated things are.

1141
01:08:29,120 --> 01:08:33,950
And all of these interactions are handled by the operating system.

1142
01:08:35,400 --> 01:08:35,690
Right?

1143
01:08:35,700 --> 01:08:36,530
At the lower level.

1144
01:08:43,120 --> 01:08:44,110
Let me just,

1145
01:08:44,660 --> 01:08:45,730
we have only 5 minutes.

1146
01:08:45,740 --> 01:08:47,350
So what i'm going to do,

1147
01:08:47,950 --> 01:08:49,530
i'm going to do the following thing,

1148
01:08:49,540 --> 01:08:51,330
and we are going to continue next time.

1149
01:08:53,220 --> 01:08:55,720
Let me first try to answer some of the question,

1150
01:08:55,730 --> 01:08:59,250
and then i'm going to go straight to some logistics.

1151
01:09:06,280 --> 01:09:08,940
How low level does this class get?

1152
01:09:08,950 --> 01:09:12,320
Do it talk about things like pipelining?

1153
01:09:13,020 --> 01:09:16,130
We want to talk much about like pipelining.

1154
01:09:16,140 --> 01:09:20,650
If you are referring as the cpu process in the cpu pipelining,

1155
01:09:21,670 --> 01:09:22,170
like instruction pipelining,

1156
01:09:23,740 --> 01:09:26,590
we are going to talk a little bit about hyper threading.

1157
01:09:28,820 --> 01:09:30,250
We are going to talk about that.

1158
01:09:31,840 --> 01:09:32,430
We'll answer.

1159
01:09:32,640 --> 01:09:34,270
This is about hyper threading.

1160
01:09:34,280 --> 01:09:36,110
We are going to talk more about being short.

1161
01:09:36,120 --> 01:09:39,780
It's a way in which you can share the core,

1162
01:09:40,120 --> 01:09:42,700
one core between two threads,

1163
01:09:42,710 --> 01:09:45,760
which can be come from different applications.

1164
01:09:48,720 --> 01:09:50,310
So it's multiplexing one core.

1165
01:09:53,610 --> 01:09:55,040
So let me just skip,

1166
01:09:55,050 --> 01:09:56,400
and obviously,

1167
01:09:56,410 --> 01:10:04,090
we'll do that as next time and talk a little bit here,

1168
01:10:08,370 --> 01:10:15,590
more about the class syllabus.

1169
01:10:17,160 --> 01:10:18,230
And it's online.

1170
01:10:18,240 --> 01:10:19,390
You have the class.

1171
01:10:19,400 --> 01:10:22,600
So we are going to, obviously,

1172
01:10:22,610 --> 01:10:28,220
to learn the operating system concepts and how a system programmer

1173
01:10:28,560 --> 01:10:30,290
is going to use these concepts.

1174
01:10:30,640 --> 01:10:32,150
What are the interfaces?

1175
01:10:32,160 --> 01:10:33,230
Ap is?

1176
01:10:34,130 --> 01:10:38,600
Then we are going to learn about how the operating system implements a lot

1177
01:10:38,610 --> 01:10:39,840
some of this functionality.

1178
01:10:40,690 --> 01:10:42,720
Like how is going to manage concurrency,

1179
01:10:43,510 --> 01:10:44,870
multiple applications,

1180
01:10:44,880 --> 01:10:46,910
accessing share resources at the same time,

1181
01:10:48,050 --> 01:10:48,910
address space,

1182
01:10:49,360 --> 01:10:53,080
how you are going to provide isolation between different applications.

1183
01:10:53,450 --> 01:10:59,830
So that each one application or process will not step over the memory

1184
01:10:59,840 --> 01:11:01,750
of another application or process.

1185
01:11:02,980 --> 01:11:03,280
File systems,

1186
01:11:03,290 --> 01:11:09,030
how you are going to access and store the data and retrieve the data,

1187
01:11:09,040 --> 01:11:12,860
send the data and receive the data over the network.

1188
01:11:15,090 --> 01:11:18,110
We are going to talk a little bit about disability systems

1189
01:11:18,120 --> 01:11:22,960
and the protocols which are and the mechanics which are implemented

1190
01:11:22,970 --> 01:11:30,340
by the distributed systems to make them easier to use and to be more

1191
01:11:30,350 --> 01:11:30,980
efficient.

1192
01:11:32,700 --> 01:11:35,980
And we are going to talk about reliability and security for tolerance,

1193
01:11:35,990 --> 01:11:37,060
protection, and so forth.

1194
01:11:38,840 --> 01:11:39,110
Finally,

1195
01:11:39,120 --> 01:11:42,470
we are going to talk about a little bit about cloud infrastructure,

1196
01:11:42,480 --> 01:11:44,430
which is very relevant, because right now,

1197
01:11:45,640 --> 01:11:47,190
cloud is the effect of standard.

1198
01:11:47,200 --> 01:11:48,350
You are going to.

1199
01:11:48,360 --> 01:11:49,780
Many companies are building,

1200
01:11:49,790 --> 01:11:52,140
especially startups are building their application.

1201
01:11:54,590 --> 01:11:56,560
This class is hands on.

1202
01:11:57,250 --> 01:11:58,730
You are going to learn by doing.

1203
01:11:59,580 --> 01:12:04,240
You have a bunch of homeworks and projects are extremely important.

1204
01:12:05,370 --> 01:12:07,640
And with the projects you are going to implement,

1205
01:12:07,650 --> 01:12:09,000
actually also in the homework,

1206
01:12:09,530 --> 01:12:13,490
some mechanism, some functionality that operating system,

1207
01:12:13,500 --> 01:12:19,220
though I like your strength and scheduling file systems,

1208
01:12:19,790 --> 01:12:21,710
and so forth, memory allocation.

1209
01:12:22,170 --> 01:12:23,390
This will be very exciting.

1210
01:12:26,860 --> 01:12:28,250
Now, what are the demands?

1211
01:12:28,260 --> 01:12:29,890
The project will require you to be

1212
01:12:29,900 --> 01:12:34,980
very comfortable with programming and debugging c so remember,

1213
01:12:34,990 --> 01:12:36,260
recall pointers,

1214
01:12:36,270 --> 01:12:37,380
memory management,

1215
01:12:38,300 --> 01:12:39,680
use gdp for debugging.

1216
01:12:41,780 --> 01:12:46,360
So just go over 61 c again,

1217
01:12:50,140 --> 01:12:54,460
you need to know how to use git for version control.

1218
01:12:55,080 --> 01:12:58,270
There is ac programming reference here if you need.

1219
01:12:59,120 --> 01:13:02,560
So please consult that.

1220
01:13:05,000 --> 01:13:09,200
I think the first section are dedicated to programming and debugging reviews.

1221
01:13:09,740 --> 01:13:11,650
So please attend these sections.

1222
01:13:12,650 --> 01:13:14,480
You can attend it to section, I believe,

1223
01:13:14,490 --> 01:13:16,120
for the first 2 weeks after that,

1224
01:13:16,130 --> 01:13:17,880
you need to choose one session a section.

1225
01:13:19,770 --> 01:13:24,330
The other thing I want to say and to be quite quick here,

1226
01:13:24,340 --> 01:13:31,150
but also I want to emphasize that projects are very important,

1227
01:13:31,160 --> 01:13:34,430
and projects are not only about doing a piece of software and building

1228
01:13:34,440 --> 01:13:35,350
a piece of software,

1229
01:13:35,360 --> 01:13:38,340
but project about teaching you how to collaborate,

1230
01:13:38,350 --> 01:13:39,840
how to work in a team.

1231
01:13:40,880 --> 01:13:42,880
This will be extremely important for you.

1232
01:13:43,170 --> 01:13:46,830
If you go and to join to be a software engineer,

1233
01:13:46,840 --> 01:13:49,030
this is a key skill you need to learn.

1234
01:13:49,680 --> 01:13:52,410
You are going to learn to do to work in a team.

1235
01:13:52,420 --> 01:13:54,410
You need to make the team successful,

1236
01:13:54,420 --> 01:13:56,890
because that's that's how you are going to become successful.

1237
01:13:57,820 --> 01:13:59,020
You are not going to work alone.

1238
01:14:00,270 --> 01:14:02,840
We require the project to have four members,

1239
01:14:05,460 --> 01:14:06,390
never five.

1240
01:14:10,260 --> 01:14:11,930
The exception will be very rare.

1241
01:14:12,910 --> 01:14:14,380
Please, this is pandemic.

1242
01:14:14,390 --> 01:14:16,660
Still, pandemic is very hard, more active.

1243
01:14:16,670 --> 01:14:18,580
Most of the activities will be online.

1244
01:14:19,270 --> 01:14:20,850
If you do online,

1245
01:14:21,470 --> 01:14:22,710
turn the camera on,

1246
01:14:23,080 --> 01:14:26,070
try to emulate the physical presence as much as possible.

1247
01:14:26,760 --> 01:14:29,280
But also now you can also the campus is open.

1248
01:14:29,760 --> 01:14:30,100
Right?

1249
01:14:30,680 --> 01:14:31,870
If you feel comfortable,

1250
01:14:31,880 --> 01:14:33,390
you can go and meet in paris.

1251
01:14:34,030 --> 01:14:34,380
Right?

1252
01:14:34,820 --> 01:14:36,730
But collaborate,

1253
01:14:37,930 --> 01:14:37,940
right?

1254
01:14:37,950 --> 01:14:39,610
And also not only between yours,

1255
01:14:39,900 --> 01:14:42,130
your man, you and your members of team,

1256
01:14:42,140 --> 01:14:44,820
but also your da right?

1257
01:14:45,030 --> 01:14:48,930
Over communication is how you make this project successful.

1258
01:14:51,360 --> 01:14:54,660
Then you need to devise the work among the members of the team,

1259
01:14:55,570 --> 01:14:55,760
right?

1260
01:14:55,770 --> 01:14:58,530
To require both decision and additional collaboration,

1261
01:14:58,540 --> 01:15:04,770
because every you are going to depend on the work of other people in your team.

1262
01:15:06,090 --> 01:15:07,130
This is a grading.

1263
01:15:07,350 --> 01:15:10,840
36% is for 3 meters.

1264
01:15:10,850 --> 01:15:12,000
We have only meters.

1265
01:15:12,010 --> 01:15:12,960
Now, final,

1266
01:15:13,850 --> 01:15:15,390
36% projects,

1267
01:15:15,400 --> 01:15:16,470
80% homeworks,

1268
01:15:16,480 --> 01:15:20,460
10% participation, section, lectures, and so forth.

1269
01:15:23,630 --> 01:15:25,000
You'll hear more about the project.

1270
01:15:25,010 --> 01:15:26,520
You have a design document.

1271
01:15:27,090 --> 01:15:28,110
Design document will be due.

1272
01:15:28,120 --> 01:15:30,970
You are going to get feedback from the t as and so forth.

1273
01:15:33,020 --> 01:15:33,960
Books and infrastructures,

1274
01:15:34,340 --> 01:15:39,430
you should be able to find all the Information as a class web page.

1275
01:15:39,800 --> 01:15:40,490
There is a piazza.

1276
01:15:40,500 --> 01:15:42,650
You find the link to the piazza as well.

1277
01:15:42,660 --> 01:15:45,890
There the lectures will be recorded.

1278
01:15:47,460 --> 01:15:48,970
Sorry, about today,

1279
01:15:48,980 --> 01:15:50,690
about the beginning of the lecture.

1280
01:15:51,140 --> 01:15:54,130
The textbook is the operating system principles and practice

1281
01:15:54,140 --> 01:15:57,690
from Tom Anderson and Tom Anderson and Mike darling.

1282
01:15:58,710 --> 01:16:01,940
There are a few other books, very good,

1283
01:16:01,950 --> 01:16:06,080
and you are encouraged to consult and to,

1284
01:16:08,220 --> 01:16:09,060
you can refer to.

1285
01:16:09,840 --> 01:16:12,460
And we are going to have a few supplemental materials,

1286
01:16:12,470 --> 01:16:14,930
a few research papers, and so forth.

1287
01:16:14,940 --> 01:16:15,690
We are going to let.

1288
01:16:18,020 --> 01:16:18,660
Finally,

1289
01:16:19,180 --> 01:16:21,280
Lee's is like,

1290
01:16:22,250 --> 01:16:23,840
this is not no joke.

1291
01:16:24,650 --> 01:16:25,190
Personal integrity.

1292
01:16:25,200 --> 01:16:28,880
You sign there used to be academic honor code.

1293
01:16:29,440 --> 01:16:32,580
So please leave by it.

1294
01:16:36,000 --> 01:16:38,630
You can explain the concept of other people in the group.

1295
01:16:38,640 --> 01:16:41,190
You can discuss the concept with other people on the group.

1296
01:16:41,200 --> 01:16:44,590
You can even help your friend to debug your code, the code,

1297
01:16:45,050 --> 01:16:47,960
or you can search online for generic codes.

1298
01:16:48,650 --> 01:16:49,670
This is no good,

1299
01:16:49,680 --> 01:16:52,710
but you cannot share the code with other groups.

1300
01:16:53,390 --> 01:16:57,950
You cannot copy or read another group's code or best cases.

1301
01:16:58,760 --> 01:17:05,540
You cannot call to copy or reading online code or test cases from prior years.

1302
01:17:07,880 --> 01:17:12,950
And we are going that we compare all projects submission against priority

1303
01:17:12,960 --> 01:17:15,530
of emissions and online solutions

1304
01:17:15,910 --> 01:17:18,630
and will take actions right against your friend.

1305
01:17:18,640 --> 01:17:19,790
So please don't do that.

1306
01:17:21,150 --> 01:17:27,260
Is not going to help you to with learning.

1307
01:17:27,790 --> 01:17:30,070
That's probably the most important reason you shouldn't do it.

1308
01:17:30,820 --> 01:17:34,950
Let's try hard to make this class in to keep this class interactive.

1309
01:17:36,530 --> 01:17:37,760
I'm going to stop here.

1310
01:17:37,770 --> 01:17:40,560
I'm going to take it about the talker.

1311
01:17:40,570 --> 01:17:41,080
Obviously,

1312
01:17:41,090 --> 01:17:44,640
a little bit more about the operating system general overview next time.

1313
01:17:45,300 --> 01:17:49,090
Now let me answer the questions which are still here.

1314
01:17:53,280 --> 01:17:55,670
How there are two other questions.

1315
01:17:55,680 --> 01:17:57,670
There is actually one last question.

1316
01:17:58,070 --> 01:18:01,690
Would it be good to review material of the later half of six times c

1317
01:18:01,700 --> 01:18:06,110
like absolutely components of the CPU how much of this?

1318
01:18:06,430 --> 01:18:06,730
Absolutely?

1319
01:18:06,990 --> 01:18:08,020
This would be very useful?

1320
01:18:08,550 --> 01:18:10,160
We are going to talk about cashing.

1321
01:18:10,170 --> 01:18:12,590
We are going to talk and reviewing that.

1322
01:18:12,600 --> 01:18:15,650
It will be so useful.

1323
01:18:16,460 --> 01:18:19,210
How does a participation grading work?

1324
01:18:19,610 --> 01:18:27,440
This will be mostly because it will be a more smaller groups from interacting

1325
01:18:27,450 --> 01:18:30,520
with your t as office hours and discussions,

1326
01:18:30,530 --> 01:18:31,640
discussion sections.

1327
01:18:32,940 --> 01:18:35,090
I am at the size of this class.

1328
01:18:35,100 --> 01:18:39,050
I don't think I will have the opportunity to interact with many of you,

1329
01:18:39,060 --> 01:18:40,610
especially since we are remote.

1330
01:18:41,160 --> 01:18:44,190
But obviously, if you have any problem, anything,

1331
01:18:44,200 --> 01:18:46,150
please do not hesitate to drop me an EMAIL.

1332
01:18:46,160 --> 01:18:47,850
And you can look for me,

1333
01:18:48,820 --> 01:18:53,060
i'll be in a soda hall,

1334
01:18:53,420 --> 01:18:54,420
at least now and then.

1335
01:18:56,430 --> 01:18:58,580
Thank you so much, everyone.

1336
01:18:58,630 --> 01:19:02,220
And i'll see you next Tuesday.

1337
01:19:04,010 --> 01:19:06,480
If you have any other questions,

1338
01:19:06,490 --> 01:19:08,280
please ask the questions.

1339
01:19:08,930 --> 01:19:13,000
If you also have any other suggestions about how to make the class better?

1340
01:19:13,310 --> 01:19:16,830
More interactive, please don't know how to hesitate to let us know.

1341
01:19:17,090 --> 01:19:20,190
It's again, II the first time I'm using is a seminar,

1342
01:19:21,700 --> 01:19:28,040
a it's hard to just talk at the screen and see the slide,

1343
01:19:28,310 --> 01:19:30,420
not see any of your faces.

1344
01:19:32,070 --> 01:19:36,920
But let's try to do our best and any idea.

1345
01:19:36,930 --> 01:19:40,900
You see, you have to improve interactivity to improve the class.

1346
01:19:40,910 --> 01:19:42,650
In general, let us know.

1347
01:19:42,930 --> 01:19:43,360
Thank you.

